// Code generated by protoc-gen-go. DO NOT EDIT.
// source: index.proto

package index

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type GetCachesRequest struct {
	ServerID             string               `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,3,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetCachesRequest) Reset()         { *m = GetCachesRequest{} }
func (m *GetCachesRequest) String() string { return proto.CompactTextString(m) }
func (*GetCachesRequest) ProtoMessage()    {}
func (*GetCachesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{1}
}

func (m *GetCachesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCachesRequest.Unmarshal(m, b)
}
func (m *GetCachesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCachesRequest.Marshal(b, m, deterministic)
}
func (m *GetCachesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCachesRequest.Merge(m, src)
}
func (m *GetCachesRequest) XXX_Size() int {
	return xxx_messageInfo_GetCachesRequest.Size(m)
}
func (m *GetCachesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCachesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCachesRequest proto.InternalMessageInfo

func (m *GetCachesRequest) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *GetCachesRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *GetCachesRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type GetCachesResponse struct {
	ServerID             string               `protobuf:"bytes,1,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	RankingsCache        *RankingsCache       `protobuf:"bytes,2,opt,name=RankingsCache,proto3" json:"RankingsCache,omitempty"`
	TotalsCache          *TotalsCache         `protobuf:"bytes,3,opt,name=TotalsCache,proto3" json:"TotalsCache,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,5,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetCachesResponse) Reset()         { *m = GetCachesResponse{} }
func (m *GetCachesResponse) String() string { return proto.CompactTextString(m) }
func (*GetCachesResponse) ProtoMessage()    {}
func (*GetCachesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{2}
}

func (m *GetCachesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCachesResponse.Unmarshal(m, b)
}
func (m *GetCachesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCachesResponse.Marshal(b, m, deterministic)
}
func (m *GetCachesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCachesResponse.Merge(m, src)
}
func (m *GetCachesResponse) XXX_Size() int {
	return xxx_messageInfo_GetCachesResponse.Size(m)
}
func (m *GetCachesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCachesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCachesResponse proto.InternalMessageInfo

func (m *GetCachesResponse) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *GetCachesResponse) GetRankingsCache() *RankingsCache {
	if m != nil {
		return m.RankingsCache
	}
	return nil
}

func (m *GetCachesResponse) GetTotalsCache() *TotalsCache {
	if m != nil {
		return m.TotalsCache
	}
	return nil
}

func (m *GetCachesResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *GetCachesResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type RankingsCache struct {
	Cache                map[string]*RankingsMap `protobuf:"bytes,1,rep,name=Cache,proto3" json:"Cache,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RankingsCache) Reset()         { *m = RankingsCache{} }
func (m *RankingsCache) String() string { return proto.CompactTextString(m) }
func (*RankingsCache) ProtoMessage()    {}
func (*RankingsCache) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{3}
}

func (m *RankingsCache) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankingsCache.Unmarshal(m, b)
}
func (m *RankingsCache) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankingsCache.Marshal(b, m, deterministic)
}
func (m *RankingsCache) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankingsCache.Merge(m, src)
}
func (m *RankingsCache) XXX_Size() int {
	return xxx_messageInfo_RankingsCache.Size(m)
}
func (m *RankingsCache) XXX_DiscardUnknown() {
	xxx_messageInfo_RankingsCache.DiscardUnknown(m)
}

var xxx_messageInfo_RankingsCache proto.InternalMessageInfo

func (m *RankingsCache) GetCache() map[string]*RankingsMap {
	if m != nil {
		return m.Cache
	}
	return nil
}

type RankingsMap struct {
	Entry                map[string]*Rankings `protobuf:"bytes,1,rep,name=Entry,proto3" json:"Entry,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RankingsMap) Reset()         { *m = RankingsMap{} }
func (m *RankingsMap) String() string { return proto.CompactTextString(m) }
func (*RankingsMap) ProtoMessage()    {}
func (*RankingsMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{4}
}

func (m *RankingsMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankingsMap.Unmarshal(m, b)
}
func (m *RankingsMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankingsMap.Marshal(b, m, deterministic)
}
func (m *RankingsMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankingsMap.Merge(m, src)
}
func (m *RankingsMap) XXX_Size() int {
	return xxx_messageInfo_RankingsMap.Size(m)
}
func (m *RankingsMap) XXX_DiscardUnknown() {
	xxx_messageInfo_RankingsMap.DiscardUnknown(m)
}

var xxx_messageInfo_RankingsMap proto.InternalMessageInfo

func (m *RankingsMap) GetEntry() map[string]*Rankings {
	if m != nil {
		return m.Entry
	}
	return nil
}

type TotalsCache struct {
	Cache                map[string]*YrTotalsMap `protobuf:"bytes,1,rep,name=Cache,proto3" json:"Cache,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TotalsCache) Reset()         { *m = TotalsCache{} }
func (m *TotalsCache) String() string { return proto.CompactTextString(m) }
func (*TotalsCache) ProtoMessage()    {}
func (*TotalsCache) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{5}
}

func (m *TotalsCache) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalsCache.Unmarshal(m, b)
}
func (m *TotalsCache) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalsCache.Marshal(b, m, deterministic)
}
func (m *TotalsCache) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalsCache.Merge(m, src)
}
func (m *TotalsCache) XXX_Size() int {
	return xxx_messageInfo_TotalsCache.Size(m)
}
func (m *TotalsCache) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalsCache.DiscardUnknown(m)
}

var xxx_messageInfo_TotalsCache proto.InternalMessageInfo

func (m *TotalsCache) GetCache() map[string]*YrTotalsMap {
	if m != nil {
		return m.Cache
	}
	return nil
}

type YrTotalsMap struct {
	Totals               map[string]*Totals `protobuf:"bytes,1,rep,name=Totals,proto3" json:"Totals,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *YrTotalsMap) Reset()         { *m = YrTotalsMap{} }
func (m *YrTotalsMap) String() string { return proto.CompactTextString(m) }
func (*YrTotalsMap) ProtoMessage()    {}
func (*YrTotalsMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{6}
}

func (m *YrTotalsMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YrTotalsMap.Unmarshal(m, b)
}
func (m *YrTotalsMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YrTotalsMap.Marshal(b, m, deterministic)
}
func (m *YrTotalsMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YrTotalsMap.Merge(m, src)
}
func (m *YrTotalsMap) XXX_Size() int {
	return xxx_messageInfo_YrTotalsMap.Size(m)
}
func (m *YrTotalsMap) XXX_DiscardUnknown() {
	xxx_messageInfo_YrTotalsMap.DiscardUnknown(m)
}

var xxx_messageInfo_YrTotalsMap proto.InternalMessageInfo

func (m *YrTotalsMap) GetTotals() map[string]*Totals {
	if m != nil {
		return m.Totals
	}
	return nil
}

type Rankings struct {
	ID                   string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Year                 string             `protobuf:"bytes,2,opt,name=Year,proto3" json:"Year,omitempty"`
	Bucket               string             `protobuf:"bytes,3,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	Category             string             `protobuf:"bytes,4,opt,name=Category,proto3" json:"Category,omitempty"`
	Party                string             `protobuf:"bytes,5,opt,name=Party,proto3" json:"Party,omitempty"`
	Rankings             map[string]float32 `protobuf:"bytes,6,rep,name=Rankings,proto3" json:"Rankings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Rankings) Reset()         { *m = Rankings{} }
func (m *Rankings) String() string { return proto.CompactTextString(m) }
func (*Rankings) ProtoMessage()    {}
func (*Rankings) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{7}
}

func (m *Rankings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rankings.Unmarshal(m, b)
}
func (m *Rankings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rankings.Marshal(b, m, deterministic)
}
func (m *Rankings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rankings.Merge(m, src)
}
func (m *Rankings) XXX_Size() int {
	return xxx_messageInfo_Rankings.Size(m)
}
func (m *Rankings) XXX_DiscardUnknown() {
	xxx_messageInfo_Rankings.DiscardUnknown(m)
}

var xxx_messageInfo_Rankings proto.InternalMessageInfo

func (m *Rankings) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Rankings) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *Rankings) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Rankings) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Rankings) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Rankings) GetRankings() map[string]float32 {
	if m != nil {
		return m.Rankings
	}
	return nil
}

type Totals struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Year                 string   `protobuf:"bytes,2,opt,name=Year,proto3" json:"Year,omitempty"`
	Category             string   `protobuf:"bytes,3,opt,name=Category,proto3" json:"Category,omitempty"`
	Party                string   `protobuf:"bytes,4,opt,name=Party,proto3" json:"Party,omitempty"`
	Total                float32  `protobuf:"fixed32,5,opt,name=Total,proto3" json:"Total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Totals) Reset()         { *m = Totals{} }
func (m *Totals) String() string { return proto.CompactTextString(m) }
func (*Totals) ProtoMessage()    {}
func (*Totals) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{8}
}

func (m *Totals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Totals.Unmarshal(m, b)
}
func (m *Totals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Totals.Marshal(b, m, deterministic)
}
func (m *Totals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Totals.Merge(m, src)
}
func (m *Totals) XXX_Size() int {
	return xxx_messageInfo_Totals.Size(m)
}
func (m *Totals) XXX_DiscardUnknown() {
	xxx_messageInfo_Totals.DiscardUnknown(m)
}

var xxx_messageInfo_Totals proto.InternalMessageInfo

func (m *Totals) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Totals) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *Totals) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Totals) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Totals) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type SearchIndexRequest struct {
	UID                  string               `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID             string               `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	Text                 string               `protobuf:"bytes,3,opt,name=Text,proto3" json:"Text,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,5,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SearchIndexRequest) Reset()         { *m = SearchIndexRequest{} }
func (m *SearchIndexRequest) String() string { return proto.CompactTextString(m) }
func (*SearchIndexRequest) ProtoMessage()    {}
func (*SearchIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{9}
}

func (m *SearchIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIndexRequest.Unmarshal(m, b)
}
func (m *SearchIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIndexRequest.Marshal(b, m, deterministic)
}
func (m *SearchIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIndexRequest.Merge(m, src)
}
func (m *SearchIndexRequest) XXX_Size() int {
	return xxx_messageInfo_SearchIndexRequest.Size(m)
}
func (m *SearchIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIndexRequest proto.InternalMessageInfo

func (m *SearchIndexRequest) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *SearchIndexRequest) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *SearchIndexRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *SearchIndexRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SearchIndexRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SearchIndexResponse struct {
	UID                  string               `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID             string               `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	Results              []*SearchResult      `protobuf:"bytes,3,rep,name=Results,proto3" json:"Results,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,5,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SearchIndexResponse) Reset()         { *m = SearchIndexResponse{} }
func (m *SearchIndexResponse) String() string { return proto.CompactTextString(m) }
func (*SearchIndexResponse) ProtoMessage()    {}
func (*SearchIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{10}
}

func (m *SearchIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIndexResponse.Unmarshal(m, b)
}
func (m *SearchIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIndexResponse.Marshal(b, m, deterministic)
}
func (m *SearchIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIndexResponse.Merge(m, src)
}
func (m *SearchIndexResponse) XXX_Size() int {
	return xxx_messageInfo_SearchIndexResponse.Size(m)
}
func (m *SearchIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIndexResponse proto.InternalMessageInfo

func (m *SearchIndexResponse) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *SearchIndexResponse) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *SearchIndexResponse) GetResults() []*SearchResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *SearchIndexResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *SearchIndexResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SearchResult struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Bucket               string   `protobuf:"bytes,2,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	City                 string   `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`
	State                string   `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	Employer             string   `protobuf:"bytes,6,opt,name=Employer,proto3" json:"Employer,omitempty"`
	Years                []string `protobuf:"bytes,7,rep,name=Years,proto3" json:"Years,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResult) Reset()         { *m = SearchResult{} }
func (m *SearchResult) String() string { return proto.CompactTextString(m) }
func (*SearchResult) ProtoMessage()    {}
func (*SearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{11}
}

func (m *SearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResult.Unmarshal(m, b)
}
func (m *SearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResult.Marshal(b, m, deterministic)
}
func (m *SearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResult.Merge(m, src)
}
func (m *SearchResult) XXX_Size() int {
	return xxx_messageInfo_SearchResult.Size(m)
}
func (m *SearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResult proto.InternalMessageInfo

func (m *SearchResult) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SearchResult) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SearchResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchResult) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *SearchResult) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *SearchResult) GetEmployer() string {
	if m != nil {
		return m.Employer
	}
	return ""
}

func (m *SearchResult) GetYears() []string {
	if m != nil {
		return m.Years
	}
	return nil
}

type LookupObjRequest struct {
	UID                  string               `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID             string               `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ObjectIds            []string             `protobuf:"bytes,3,rep,name=ObjectIds,proto3" json:"ObjectIds,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,5,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LookupObjRequest) Reset()         { *m = LookupObjRequest{} }
func (m *LookupObjRequest) String() string { return proto.CompactTextString(m) }
func (*LookupObjRequest) ProtoMessage()    {}
func (*LookupObjRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{12}
}

func (m *LookupObjRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupObjRequest.Unmarshal(m, b)
}
func (m *LookupObjRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupObjRequest.Marshal(b, m, deterministic)
}
func (m *LookupObjRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupObjRequest.Merge(m, src)
}
func (m *LookupObjRequest) XXX_Size() int {
	return xxx_messageInfo_LookupObjRequest.Size(m)
}
func (m *LookupObjRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupObjRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupObjRequest proto.InternalMessageInfo

func (m *LookupObjRequest) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *LookupObjRequest) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *LookupObjRequest) GetObjectIds() []string {
	if m != nil {
		return m.ObjectIds
	}
	return nil
}

func (m *LookupObjRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LookupObjRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LookupObjResponse struct {
	UID                  string               `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID             string               `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	Results              []*SearchResult      `protobuf:"bytes,3,rep,name=Results,proto3" json:"Results,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,5,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LookupObjResponse) Reset()         { *m = LookupObjResponse{} }
func (m *LookupObjResponse) String() string { return proto.CompactTextString(m) }
func (*LookupObjResponse) ProtoMessage()    {}
func (*LookupObjResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{13}
}

func (m *LookupObjResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupObjResponse.Unmarshal(m, b)
}
func (m *LookupObjResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupObjResponse.Marshal(b, m, deterministic)
}
func (m *LookupObjResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupObjResponse.Merge(m, src)
}
func (m *LookupObjResponse) XXX_Size() int {
	return xxx_messageInfo_LookupObjResponse.Size(m)
}
func (m *LookupObjResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupObjResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupObjResponse proto.InternalMessageInfo

func (m *LookupObjResponse) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *LookupObjResponse) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *LookupObjResponse) GetResults() []*SearchResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *LookupObjResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LookupObjResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LookupIndvRequest struct {
	UID                  string               `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID             string               `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ObjectID             string               `protobuf:"bytes,3,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Bucket               string               `protobuf:"bytes,4,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	Years                []string             `protobuf:"bytes,5,rep,name=Years,proto3" json:"Years,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,7,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LookupIndvRequest) Reset()         { *m = LookupIndvRequest{} }
func (m *LookupIndvRequest) String() string { return proto.CompactTextString(m) }
func (*LookupIndvRequest) ProtoMessage()    {}
func (*LookupIndvRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{14}
}

func (m *LookupIndvRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupIndvRequest.Unmarshal(m, b)
}
func (m *LookupIndvRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupIndvRequest.Marshal(b, m, deterministic)
}
func (m *LookupIndvRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupIndvRequest.Merge(m, src)
}
func (m *LookupIndvRequest) XXX_Size() int {
	return xxx_messageInfo_LookupIndvRequest.Size(m)
}
func (m *LookupIndvRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupIndvRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupIndvRequest proto.InternalMessageInfo

func (m *LookupIndvRequest) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *LookupIndvRequest) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *LookupIndvRequest) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *LookupIndvRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *LookupIndvRequest) GetYears() []string {
	if m != nil {
		return m.Years
	}
	return nil
}

func (m *LookupIndvRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LookupIndvRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LookupIndvResponse struct {
	UID      string `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ObjectID string `protobuf:"bytes,3,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Bucket   string `protobuf:"bytes,4,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	// datasets for each year in request aggregated
	// into singular object encoded on server prior
	// to encoding response
	Individual           *Individual          `protobuf:"bytes,5,opt,name=Individual,proto3" json:"Individual,omitempty"`
	Years                []string             `protobuf:"bytes,6,rep,name=Years,proto3" json:"Years,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,8,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LookupIndvResponse) Reset()         { *m = LookupIndvResponse{} }
func (m *LookupIndvResponse) String() string { return proto.CompactTextString(m) }
func (*LookupIndvResponse) ProtoMessage()    {}
func (*LookupIndvResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{15}
}

func (m *LookupIndvResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupIndvResponse.Unmarshal(m, b)
}
func (m *LookupIndvResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupIndvResponse.Marshal(b, m, deterministic)
}
func (m *LookupIndvResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupIndvResponse.Merge(m, src)
}
func (m *LookupIndvResponse) XXX_Size() int {
	return xxx_messageInfo_LookupIndvResponse.Size(m)
}
func (m *LookupIndvResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupIndvResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupIndvResponse proto.InternalMessageInfo

func (m *LookupIndvResponse) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *LookupIndvResponse) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *LookupIndvResponse) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *LookupIndvResponse) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *LookupIndvResponse) GetIndividual() *Individual {
	if m != nil {
		return m.Individual
	}
	return nil
}

func (m *LookupIndvResponse) GetYears() []string {
	if m != nil {
		return m.Years
	}
	return nil
}

func (m *LookupIndvResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LookupIndvResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LookupCandRequest struct {
	UID                  string               `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID             string               `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ObjectID             string               `protobuf:"bytes,3,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Bucket               string               `protobuf:"bytes,4,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	Years                []string             `protobuf:"bytes,5,rep,name=Years,proto3" json:"Years,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,7,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LookupCandRequest) Reset()         { *m = LookupCandRequest{} }
func (m *LookupCandRequest) String() string { return proto.CompactTextString(m) }
func (*LookupCandRequest) ProtoMessage()    {}
func (*LookupCandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{16}
}

func (m *LookupCandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupCandRequest.Unmarshal(m, b)
}
func (m *LookupCandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupCandRequest.Marshal(b, m, deterministic)
}
func (m *LookupCandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupCandRequest.Merge(m, src)
}
func (m *LookupCandRequest) XXX_Size() int {
	return xxx_messageInfo_LookupCandRequest.Size(m)
}
func (m *LookupCandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupCandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupCandRequest proto.InternalMessageInfo

func (m *LookupCandRequest) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *LookupCandRequest) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *LookupCandRequest) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *LookupCandRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *LookupCandRequest) GetYears() []string {
	if m != nil {
		return m.Years
	}
	return nil
}

func (m *LookupCandRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LookupCandRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LookupCandResponse struct {
	UID      string `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ObjectID string `protobuf:"bytes,3,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Bucket   string `protobuf:"bytes,4,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	// datasets for each year in request aggregated
	// into singular object encoded on server prior
	// to encoding response
	Candidate            *Candidate           `protobuf:"bytes,5,opt,name=Candidate,proto3" json:"Candidate,omitempty"`
	Financials           *CmpnFinancials      `protobuf:"bytes,6,opt,name=Financials,proto3" json:"Financials,omitempty"`
	Years                []string             `protobuf:"bytes,7,rep,name=Years,proto3" json:"Years,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,9,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LookupCandResponse) Reset()         { *m = LookupCandResponse{} }
func (m *LookupCandResponse) String() string { return proto.CompactTextString(m) }
func (*LookupCandResponse) ProtoMessage()    {}
func (*LookupCandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{17}
}

func (m *LookupCandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupCandResponse.Unmarshal(m, b)
}
func (m *LookupCandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupCandResponse.Marshal(b, m, deterministic)
}
func (m *LookupCandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupCandResponse.Merge(m, src)
}
func (m *LookupCandResponse) XXX_Size() int {
	return xxx_messageInfo_LookupCandResponse.Size(m)
}
func (m *LookupCandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupCandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupCandResponse proto.InternalMessageInfo

func (m *LookupCandResponse) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *LookupCandResponse) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *LookupCandResponse) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *LookupCandResponse) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *LookupCandResponse) GetCandidate() *Candidate {
	if m != nil {
		return m.Candidate
	}
	return nil
}

func (m *LookupCandResponse) GetFinancials() *CmpnFinancials {
	if m != nil {
		return m.Financials
	}
	return nil
}

func (m *LookupCandResponse) GetYears() []string {
	if m != nil {
		return m.Years
	}
	return nil
}

func (m *LookupCandResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LookupCandResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LookupCmteRequest struct {
	UID                  string               `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID             string               `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ObjectID             string               `protobuf:"bytes,3,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Bucket               string               `protobuf:"bytes,4,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	Years                []string             `protobuf:"bytes,5,rep,name=Years,proto3" json:"Years,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,7,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LookupCmteRequest) Reset()         { *m = LookupCmteRequest{} }
func (m *LookupCmteRequest) String() string { return proto.CompactTextString(m) }
func (*LookupCmteRequest) ProtoMessage()    {}
func (*LookupCmteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{18}
}

func (m *LookupCmteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupCmteRequest.Unmarshal(m, b)
}
func (m *LookupCmteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupCmteRequest.Marshal(b, m, deterministic)
}
func (m *LookupCmteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupCmteRequest.Merge(m, src)
}
func (m *LookupCmteRequest) XXX_Size() int {
	return xxx_messageInfo_LookupCmteRequest.Size(m)
}
func (m *LookupCmteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupCmteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupCmteRequest proto.InternalMessageInfo

func (m *LookupCmteRequest) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *LookupCmteRequest) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *LookupCmteRequest) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *LookupCmteRequest) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *LookupCmteRequest) GetYears() []string {
	if m != nil {
		return m.Years
	}
	return nil
}

func (m *LookupCmteRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LookupCmteRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type LookupCmteResponse struct {
	UID      string `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	ServerID string `protobuf:"bytes,2,opt,name=ServerID,proto3" json:"ServerID,omitempty"`
	ObjectID string `protobuf:"bytes,3,opt,name=ObjectID,proto3" json:"ObjectID,omitempty"`
	Bucket   string `protobuf:"bytes,4,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	// datasets for each year in request aggregated
	// into singular object encoded on server prior
	// to encoding response
	Committee            *Committee           `protobuf:"bytes,5,opt,name=Committee,proto3" json:"Committee,omitempty"`
	TxData               *CmteTxData          `protobuf:"bytes,6,opt,name=TxData,proto3" json:"TxData,omitempty"`
	Financials           *CmteFinancials      `protobuf:"bytes,7,opt,name=Financials,proto3" json:"Financials,omitempty"`
	Years                []string             `protobuf:"bytes,8,rep,name=Years,proto3" json:"Years,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Msg                  string               `protobuf:"bytes,10,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LookupCmteResponse) Reset()         { *m = LookupCmteResponse{} }
func (m *LookupCmteResponse) String() string { return proto.CompactTextString(m) }
func (*LookupCmteResponse) ProtoMessage()    {}
func (*LookupCmteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{19}
}

func (m *LookupCmteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupCmteResponse.Unmarshal(m, b)
}
func (m *LookupCmteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupCmteResponse.Marshal(b, m, deterministic)
}
func (m *LookupCmteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupCmteResponse.Merge(m, src)
}
func (m *LookupCmteResponse) XXX_Size() int {
	return xxx_messageInfo_LookupCmteResponse.Size(m)
}
func (m *LookupCmteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupCmteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupCmteResponse proto.InternalMessageInfo

func (m *LookupCmteResponse) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *LookupCmteResponse) GetServerID() string {
	if m != nil {
		return m.ServerID
	}
	return ""
}

func (m *LookupCmteResponse) GetObjectID() string {
	if m != nil {
		return m.ObjectID
	}
	return ""
}

func (m *LookupCmteResponse) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *LookupCmteResponse) GetCommittee() *Committee {
	if m != nil {
		return m.Committee
	}
	return nil
}

func (m *LookupCmteResponse) GetTxData() *CmteTxData {
	if m != nil {
		return m.TxData
	}
	return nil
}

func (m *LookupCmteResponse) GetFinancials() *CmteFinancials {
	if m != nil {
		return m.Financials
	}
	return nil
}

func (m *LookupCmteResponse) GetYears() []string {
	if m != nil {
		return m.Years
	}
	return nil
}

func (m *LookupCmteResponse) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LookupCmteResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type TotalsMap struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Total                float32  `protobuf:"fixed32,2,opt,name=Total,proto3" json:"Total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TotalsMap) Reset()         { *m = TotalsMap{} }
func (m *TotalsMap) String() string { return proto.CompactTextString(m) }
func (*TotalsMap) ProtoMessage()    {}
func (*TotalsMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{20}
}

func (m *TotalsMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalsMap.Unmarshal(m, b)
}
func (m *TotalsMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalsMap.Marshal(b, m, deterministic)
}
func (m *TotalsMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalsMap.Merge(m, src)
}
func (m *TotalsMap) XXX_Size() int {
	return xxx_messageInfo_TotalsMap.Size(m)
}
func (m *TotalsMap) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalsMap.DiscardUnknown(m)
}

var xxx_messageInfo_TotalsMap proto.InternalMessageInfo

func (m *TotalsMap) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *TotalsMap) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Individual struct {
	ID                   string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	City                 string             `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`
	State                string             `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	Zip                  string             `protobuf:"bytes,5,opt,name=Zip,proto3" json:"Zip,omitempty"`
	Occupation           string             `protobuf:"bytes,6,opt,name=Occupation,proto3" json:"Occupation,omitempty"`
	Employer             string             `protobuf:"bytes,7,opt,name=Employer,proto3" json:"Employer,omitempty"`
	Transactions         []string           `protobuf:"bytes,8,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	TotalOutAmt          float32            `protobuf:"fixed32,9,opt,name=TotalOutAmt,proto3" json:"TotalOutAmt,omitempty"`
	TotalOutTxs          float32            `protobuf:"fixed32,10,opt,name=TotalOutTxs,proto3" json:"TotalOutTxs,omitempty"`
	AvgTxOut             float32            `protobuf:"fixed32,11,opt,name=AvgTxOut,proto3" json:"AvgTxOut,omitempty"`
	TotalInAmt           float32            `protobuf:"fixed32,12,opt,name=TotalInAmt,proto3" json:"TotalInAmt,omitempty"`
	TotalInTxs           float32            `protobuf:"fixed32,13,opt,name=TotalInTxs,proto3" json:"TotalInTxs,omitempty"`
	AvgTxIn              float32            `protobuf:"fixed32,14,opt,name=AvgTxIn,proto3" json:"AvgTxIn,omitempty"`
	NetBalance           float32            `protobuf:"fixed32,15,opt,name=NetBalance,proto3" json:"NetBalance,omitempty"`
	RecipientsAmt        []*TotalsMap       `protobuf:"bytes,16,rep,name=RecipientsAmt,proto3" json:"RecipientsAmt,omitempty"`
	RecipientsTxs        map[string]float32 `protobuf:"bytes,17,rep,name=RecipientsTxs,proto3" json:"RecipientsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	SendersAmt           []*TotalsMap       `protobuf:"bytes,18,rep,name=SendersAmt,proto3" json:"SendersAmt,omitempty"`
	SendersTxs           map[string]float32 `protobuf:"bytes,19,rep,name=SendersTxs,proto3" json:"SendersTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Individual) Reset()         { *m = Individual{} }
func (m *Individual) String() string { return proto.CompactTextString(m) }
func (*Individual) ProtoMessage()    {}
func (*Individual) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{21}
}

func (m *Individual) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Individual.Unmarshal(m, b)
}
func (m *Individual) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Individual.Marshal(b, m, deterministic)
}
func (m *Individual) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Individual.Merge(m, src)
}
func (m *Individual) XXX_Size() int {
	return xxx_messageInfo_Individual.Size(m)
}
func (m *Individual) XXX_DiscardUnknown() {
	xxx_messageInfo_Individual.DiscardUnknown(m)
}

var xxx_messageInfo_Individual proto.InternalMessageInfo

func (m *Individual) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Individual) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Individual) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Individual) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Individual) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Individual) GetOccupation() string {
	if m != nil {
		return m.Occupation
	}
	return ""
}

func (m *Individual) GetEmployer() string {
	if m != nil {
		return m.Employer
	}
	return ""
}

func (m *Individual) GetTransactions() []string {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Individual) GetTotalOutAmt() float32 {
	if m != nil {
		return m.TotalOutAmt
	}
	return 0
}

func (m *Individual) GetTotalOutTxs() float32 {
	if m != nil {
		return m.TotalOutTxs
	}
	return 0
}

func (m *Individual) GetAvgTxOut() float32 {
	if m != nil {
		return m.AvgTxOut
	}
	return 0
}

func (m *Individual) GetTotalInAmt() float32 {
	if m != nil {
		return m.TotalInAmt
	}
	return 0
}

func (m *Individual) GetTotalInTxs() float32 {
	if m != nil {
		return m.TotalInTxs
	}
	return 0
}

func (m *Individual) GetAvgTxIn() float32 {
	if m != nil {
		return m.AvgTxIn
	}
	return 0
}

func (m *Individual) GetNetBalance() float32 {
	if m != nil {
		return m.NetBalance
	}
	return 0
}

func (m *Individual) GetRecipientsAmt() []*TotalsMap {
	if m != nil {
		return m.RecipientsAmt
	}
	return nil
}

func (m *Individual) GetRecipientsTxs() map[string]float32 {
	if m != nil {
		return m.RecipientsTxs
	}
	return nil
}

func (m *Individual) GetSendersAmt() []*TotalsMap {
	if m != nil {
		return m.SendersAmt
	}
	return nil
}

func (m *Individual) GetSendersTxs() map[string]float32 {
	if m != nil {
		return m.SendersTxs
	}
	return nil
}

type Committee struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	TresName             string   `protobuf:"bytes,3,opt,name=TresName,proto3" json:"TresName,omitempty"`
	City                 string   `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`
	State                string   `protobuf:"bytes,5,opt,name=State,proto3" json:"State,omitempty"`
	Zip                  string   `protobuf:"bytes,6,opt,name=Zip,proto3" json:"Zip,omitempty"`
	Designation          string   `protobuf:"bytes,7,opt,name=Designation,proto3" json:"Designation,omitempty"`
	Type                 string   `protobuf:"bytes,8,opt,name=Type,proto3" json:"Type,omitempty"`
	Party                string   `protobuf:"bytes,9,opt,name=Party,proto3" json:"Party,omitempty"`
	FilingFreq           string   `protobuf:"bytes,10,opt,name=FilingFreq,proto3" json:"FilingFreq,omitempty"`
	OrgType              string   `protobuf:"bytes,11,opt,name=OrgType,proto3" json:"OrgType,omitempty"`
	ConnectedOrg         string   `protobuf:"bytes,12,opt,name=ConnectedOrg,proto3" json:"ConnectedOrg,omitempty"`
	CandID               string   `protobuf:"bytes,13,opt,name=CandID,proto3" json:"CandID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Committee) Reset()         { *m = Committee{} }
func (m *Committee) String() string { return proto.CompactTextString(m) }
func (*Committee) ProtoMessage()    {}
func (*Committee) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{22}
}

func (m *Committee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Committee.Unmarshal(m, b)
}
func (m *Committee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Committee.Marshal(b, m, deterministic)
}
func (m *Committee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Committee.Merge(m, src)
}
func (m *Committee) XXX_Size() int {
	return xxx_messageInfo_Committee.Size(m)
}
func (m *Committee) XXX_DiscardUnknown() {
	xxx_messageInfo_Committee.DiscardUnknown(m)
}

var xxx_messageInfo_Committee proto.InternalMessageInfo

func (m *Committee) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Committee) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Committee) GetTresName() string {
	if m != nil {
		return m.TresName
	}
	return ""
}

func (m *Committee) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Committee) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Committee) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Committee) GetDesignation() string {
	if m != nil {
		return m.Designation
	}
	return ""
}

func (m *Committee) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Committee) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Committee) GetFilingFreq() string {
	if m != nil {
		return m.FilingFreq
	}
	return ""
}

func (m *Committee) GetOrgType() string {
	if m != nil {
		return m.OrgType
	}
	return ""
}

func (m *Committee) GetConnectedOrg() string {
	if m != nil {
		return m.ConnectedOrg
	}
	return ""
}

func (m *Committee) GetCandID() string {
	if m != nil {
		return m.CandID
	}
	return ""
}

type Candidate struct {
	ID                   string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Party                string             `protobuf:"bytes,3,opt,name=Party,proto3" json:"Party,omitempty"`
	ElectnYr             int32              `protobuf:"varint,4,opt,name=ElectnYr,proto3" json:"ElectnYr,omitempty"`
	OfficeState          string             `protobuf:"bytes,5,opt,name=OfficeState,proto3" json:"OfficeState,omitempty"`
	Office               string             `protobuf:"bytes,6,opt,name=Office,proto3" json:"Office,omitempty"`
	PCC                  string             `protobuf:"bytes,7,opt,name=PCC,proto3" json:"PCC,omitempty"`
	City                 string             `protobuf:"bytes,8,opt,name=City,proto3" json:"City,omitempty"`
	State                string             `protobuf:"bytes,9,opt,name=State,proto3" json:"State,omitempty"`
	Zip                  string             `protobuf:"bytes,10,opt,name=Zip,proto3" json:"Zip,omitempty"`
	OtherAffiliates      []string           `protobuf:"bytes,11,rep,name=OtherAffiliates,proto3" json:"OtherAffiliates,omitempty"`
	TransactionsList     []string           `protobuf:"bytes,12,rep,name=TransactionsList,proto3" json:"TransactionsList,omitempty"`
	TotalDirectInAmt     float32            `protobuf:"fixed32,13,opt,name=TotalDirectInAmt,proto3" json:"TotalDirectInAmt,omitempty"`
	TotalDirectInTxs     float32            `protobuf:"fixed32,14,opt,name=TotalDirectInTxs,proto3" json:"TotalDirectInTxs,omitempty"`
	AvgDirectIn          float32            `protobuf:"fixed32,15,opt,name=AvgDirectIn,proto3" json:"AvgDirectIn,omitempty"`
	TotalDirectOutAmt    float32            `protobuf:"fixed32,16,opt,name=TotalDirectOutAmt,proto3" json:"TotalDirectOutAmt,omitempty"`
	TotalDirectOutTxs    float32            `protobuf:"fixed32,17,opt,name=TotalDirectOutTxs,proto3" json:"TotalDirectOutTxs,omitempty"`
	AvgDirectOut         float32            `protobuf:"fixed32,18,opt,name=AvgDirectOut,proto3" json:"AvgDirectOut,omitempty"`
	NetBalanceDirectTx   float32            `protobuf:"fixed32,19,opt,name=NetBalanceDirectTx,proto3" json:"NetBalanceDirectTx,omitempty"`
	DirectRecipientsAmts []*TotalsMap       `protobuf:"bytes,20,rep,name=DirectRecipientsAmts,proto3" json:"DirectRecipientsAmts,omitempty"`
	DirectRecipientsTxs  map[string]float32 `protobuf:"bytes,21,rep,name=DirectRecipientsTxs,proto3" json:"DirectRecipientsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	DirectSendersAmts    []*TotalsMap       `protobuf:"bytes,22,rep,name=DirectSendersAmts,proto3" json:"DirectSendersAmts,omitempty"`
	DirectSendersTxs     map[string]float32 `protobuf:"bytes,23,rep,name=DirectSendersTxs,proto3" json:"DirectSendersTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{23}
}

func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (m *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(m, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Candidate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Candidate) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Candidate) GetElectnYr() int32 {
	if m != nil {
		return m.ElectnYr
	}
	return 0
}

func (m *Candidate) GetOfficeState() string {
	if m != nil {
		return m.OfficeState
	}
	return ""
}

func (m *Candidate) GetOffice() string {
	if m != nil {
		return m.Office
	}
	return ""
}

func (m *Candidate) GetPCC() string {
	if m != nil {
		return m.PCC
	}
	return ""
}

func (m *Candidate) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Candidate) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Candidate) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Candidate) GetOtherAffiliates() []string {
	if m != nil {
		return m.OtherAffiliates
	}
	return nil
}

func (m *Candidate) GetTransactionsList() []string {
	if m != nil {
		return m.TransactionsList
	}
	return nil
}

func (m *Candidate) GetTotalDirectInAmt() float32 {
	if m != nil {
		return m.TotalDirectInAmt
	}
	return 0
}

func (m *Candidate) GetTotalDirectInTxs() float32 {
	if m != nil {
		return m.TotalDirectInTxs
	}
	return 0
}

func (m *Candidate) GetAvgDirectIn() float32 {
	if m != nil {
		return m.AvgDirectIn
	}
	return 0
}

func (m *Candidate) GetTotalDirectOutAmt() float32 {
	if m != nil {
		return m.TotalDirectOutAmt
	}
	return 0
}

func (m *Candidate) GetTotalDirectOutTxs() float32 {
	if m != nil {
		return m.TotalDirectOutTxs
	}
	return 0
}

func (m *Candidate) GetAvgDirectOut() float32 {
	if m != nil {
		return m.AvgDirectOut
	}
	return 0
}

func (m *Candidate) GetNetBalanceDirectTx() float32 {
	if m != nil {
		return m.NetBalanceDirectTx
	}
	return 0
}

func (m *Candidate) GetDirectRecipientsAmts() []*TotalsMap {
	if m != nil {
		return m.DirectRecipientsAmts
	}
	return nil
}

func (m *Candidate) GetDirectRecipientsTxs() map[string]float32 {
	if m != nil {
		return m.DirectRecipientsTxs
	}
	return nil
}

func (m *Candidate) GetDirectSendersAmts() []*TotalsMap {
	if m != nil {
		return m.DirectSendersAmts
	}
	return nil
}

func (m *Candidate) GetDirectSendersTxs() map[string]float32 {
	if m != nil {
		return m.DirectSendersTxs
	}
	return nil
}

type CmpnFinancials struct {
	CandID               string               `protobuf:"bytes,1,opt,name=CandID,proto3" json:"CandID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	PartyCd              string               `protobuf:"bytes,3,opt,name=PartyCd,proto3" json:"PartyCd,omitempty"`
	Party                string               `protobuf:"bytes,4,opt,name=Party,proto3" json:"Party,omitempty"`
	TotalReceipts        float32              `protobuf:"fixed32,5,opt,name=TotalReceipts,proto3" json:"TotalReceipts,omitempty"`
	TransFrAuth          float32              `protobuf:"fixed32,6,opt,name=TransFrAuth,proto3" json:"TransFrAuth,omitempty"`
	TotalDisbsmts        float32              `protobuf:"fixed32,7,opt,name=TotalDisbsmts,proto3" json:"TotalDisbsmts,omitempty"`
	TransToAuth          float32              `protobuf:"fixed32,8,opt,name=TransToAuth,proto3" json:"TransToAuth,omitempty"`
	COHBOP               float32              `protobuf:"fixed32,9,opt,name=COHBOP,proto3" json:"COHBOP,omitempty"`
	COHCOP               float32              `protobuf:"fixed32,10,opt,name=COHCOP,proto3" json:"COHCOP,omitempty"`
	CandConts            float32              `protobuf:"fixed32,11,opt,name=CandConts,proto3" json:"CandConts,omitempty"`
	CandLoans            float32              `protobuf:"fixed32,12,opt,name=CandLoans,proto3" json:"CandLoans,omitempty"`
	OtherLoans           float32              `protobuf:"fixed32,13,opt,name=OtherLoans,proto3" json:"OtherLoans,omitempty"`
	CandLoanRepay        float32              `protobuf:"fixed32,14,opt,name=CandLoanRepay,proto3" json:"CandLoanRepay,omitempty"`
	OtherLoanRepay       float32              `protobuf:"fixed32,15,opt,name=OtherLoanRepay,proto3" json:"OtherLoanRepay,omitempty"`
	DebtsOwedBy          float32              `protobuf:"fixed32,16,opt,name=DebtsOwedBy,proto3" json:"DebtsOwedBy,omitempty"`
	TotalIndvConts       float32              `protobuf:"fixed32,17,opt,name=TotalIndvConts,proto3" json:"TotalIndvConts,omitempty"`
	OfficeState          string               `protobuf:"bytes,18,opt,name=OfficeState,proto3" json:"OfficeState,omitempty"`
	OfficeDistrict       string               `protobuf:"bytes,19,opt,name=OfficeDistrict,proto3" json:"OfficeDistrict,omitempty"`
	SpecElection         string               `protobuf:"bytes,20,opt,name=SpecElection,proto3" json:"SpecElection,omitempty"`
	PrimElection         string               `protobuf:"bytes,21,opt,name=PrimElection,proto3" json:"PrimElection,omitempty"`
	RunElection          string               `protobuf:"bytes,22,opt,name=RunElection,proto3" json:"RunElection,omitempty"`
	GenElection          string               `protobuf:"bytes,23,opt,name=GenElection,proto3" json:"GenElection,omitempty"`
	GenElectionPct       float32              `protobuf:"fixed32,24,opt,name=GenElectionPct,proto3" json:"GenElectionPct,omitempty"`
	OtherCmteConts       float32              `protobuf:"fixed32,25,opt,name=OtherCmteConts,proto3" json:"OtherCmteConts,omitempty"`
	PtyConts             float32              `protobuf:"fixed32,26,opt,name=PtyConts,proto3" json:"PtyConts,omitempty"`
	CvgEndDate           *timestamp.Timestamp `protobuf:"bytes,27,opt,name=CvgEndDate,proto3" json:"CvgEndDate,omitempty"`
	IndvRefunds          float32              `protobuf:"fixed32,28,opt,name=IndvRefunds,proto3" json:"IndvRefunds,omitempty"`
	CmteRefunds          float32              `protobuf:"fixed32,29,opt,name=CmteRefunds,proto3" json:"CmteRefunds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CmpnFinancials) Reset()         { *m = CmpnFinancials{} }
func (m *CmpnFinancials) String() string { return proto.CompactTextString(m) }
func (*CmpnFinancials) ProtoMessage()    {}
func (*CmpnFinancials) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{24}
}

func (m *CmpnFinancials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmpnFinancials.Unmarshal(m, b)
}
func (m *CmpnFinancials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmpnFinancials.Marshal(b, m, deterministic)
}
func (m *CmpnFinancials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmpnFinancials.Merge(m, src)
}
func (m *CmpnFinancials) XXX_Size() int {
	return xxx_messageInfo_CmpnFinancials.Size(m)
}
func (m *CmpnFinancials) XXX_DiscardUnknown() {
	xxx_messageInfo_CmpnFinancials.DiscardUnknown(m)
}

var xxx_messageInfo_CmpnFinancials proto.InternalMessageInfo

func (m *CmpnFinancials) GetCandID() string {
	if m != nil {
		return m.CandID
	}
	return ""
}

func (m *CmpnFinancials) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CmpnFinancials) GetPartyCd() string {
	if m != nil {
		return m.PartyCd
	}
	return ""
}

func (m *CmpnFinancials) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *CmpnFinancials) GetTotalReceipts() float32 {
	if m != nil {
		return m.TotalReceipts
	}
	return 0
}

func (m *CmpnFinancials) GetTransFrAuth() float32 {
	if m != nil {
		return m.TransFrAuth
	}
	return 0
}

func (m *CmpnFinancials) GetTotalDisbsmts() float32 {
	if m != nil {
		return m.TotalDisbsmts
	}
	return 0
}

func (m *CmpnFinancials) GetTransToAuth() float32 {
	if m != nil {
		return m.TransToAuth
	}
	return 0
}

func (m *CmpnFinancials) GetCOHBOP() float32 {
	if m != nil {
		return m.COHBOP
	}
	return 0
}

func (m *CmpnFinancials) GetCOHCOP() float32 {
	if m != nil {
		return m.COHCOP
	}
	return 0
}

func (m *CmpnFinancials) GetCandConts() float32 {
	if m != nil {
		return m.CandConts
	}
	return 0
}

func (m *CmpnFinancials) GetCandLoans() float32 {
	if m != nil {
		return m.CandLoans
	}
	return 0
}

func (m *CmpnFinancials) GetOtherLoans() float32 {
	if m != nil {
		return m.OtherLoans
	}
	return 0
}

func (m *CmpnFinancials) GetCandLoanRepay() float32 {
	if m != nil {
		return m.CandLoanRepay
	}
	return 0
}

func (m *CmpnFinancials) GetOtherLoanRepay() float32 {
	if m != nil {
		return m.OtherLoanRepay
	}
	return 0
}

func (m *CmpnFinancials) GetDebtsOwedBy() float32 {
	if m != nil {
		return m.DebtsOwedBy
	}
	return 0
}

func (m *CmpnFinancials) GetTotalIndvConts() float32 {
	if m != nil {
		return m.TotalIndvConts
	}
	return 0
}

func (m *CmpnFinancials) GetOfficeState() string {
	if m != nil {
		return m.OfficeState
	}
	return ""
}

func (m *CmpnFinancials) GetOfficeDistrict() string {
	if m != nil {
		return m.OfficeDistrict
	}
	return ""
}

func (m *CmpnFinancials) GetSpecElection() string {
	if m != nil {
		return m.SpecElection
	}
	return ""
}

func (m *CmpnFinancials) GetPrimElection() string {
	if m != nil {
		return m.PrimElection
	}
	return ""
}

func (m *CmpnFinancials) GetRunElection() string {
	if m != nil {
		return m.RunElection
	}
	return ""
}

func (m *CmpnFinancials) GetGenElection() string {
	if m != nil {
		return m.GenElection
	}
	return ""
}

func (m *CmpnFinancials) GetGenElectionPct() float32 {
	if m != nil {
		return m.GenElectionPct
	}
	return 0
}

func (m *CmpnFinancials) GetOtherCmteConts() float32 {
	if m != nil {
		return m.OtherCmteConts
	}
	return 0
}

func (m *CmpnFinancials) GetPtyConts() float32 {
	if m != nil {
		return m.PtyConts
	}
	return 0
}

func (m *CmpnFinancials) GetCvgEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.CvgEndDate
	}
	return nil
}

func (m *CmpnFinancials) GetIndvRefunds() float32 {
	if m != nil {
		return m.IndvRefunds
	}
	return 0
}

func (m *CmpnFinancials) GetCmteRefunds() float32 {
	if m != nil {
		return m.CmteRefunds
	}
	return 0
}

type CmteFinancials struct {
	CmteID               string               `protobuf:"bytes,1,opt,name=CmteID,proto3" json:"CmteID,omitempty"`
	TotalReceipts        float32              `protobuf:"fixed32,2,opt,name=TotalReceipts,proto3" json:"TotalReceipts,omitempty"`
	TxsFromAff           float32              `protobuf:"fixed32,3,opt,name=TxsFromAff,proto3" json:"TxsFromAff,omitempty"`
	IndvConts            float32              `protobuf:"fixed32,4,opt,name=IndvConts,proto3" json:"IndvConts,omitempty"`
	OtherConts           float32              `protobuf:"fixed32,5,opt,name=OtherConts,proto3" json:"OtherConts,omitempty"`
	CandCont             float32              `protobuf:"fixed32,6,opt,name=CandCont,proto3" json:"CandCont,omitempty"`
	CandLoans            float32              `protobuf:"fixed32,7,opt,name=CandLoans,proto3" json:"CandLoans,omitempty"`
	TotalLoans           float32              `protobuf:"fixed32,8,opt,name=TotalLoans,proto3" json:"TotalLoans,omitempty"`
	TotalDisb            float32              `protobuf:"fixed32,9,opt,name=TotalDisb,proto3" json:"TotalDisb,omitempty"`
	TxToAff              float32              `protobuf:"fixed32,10,opt,name=TxToAff,proto3" json:"TxToAff,omitempty"`
	IndvRefunds          float32              `protobuf:"fixed32,11,opt,name=IndvRefunds,proto3" json:"IndvRefunds,omitempty"`
	OtherRefunds         float32              `protobuf:"fixed32,12,opt,name=OtherRefunds,proto3" json:"OtherRefunds,omitempty"`
	LoanRepay            float32              `protobuf:"fixed32,13,opt,name=LoanRepay,proto3" json:"LoanRepay,omitempty"`
	CashBOP              float32              `protobuf:"fixed32,14,opt,name=CashBOP,proto3" json:"CashBOP,omitempty"`
	CashCOP              float32              `protobuf:"fixed32,15,opt,name=CashCOP,proto3" json:"CashCOP,omitempty"`
	DebtsOwed            float32              `protobuf:"fixed32,16,opt,name=DebtsOwed,proto3" json:"DebtsOwed,omitempty"`
	NonFedTxsRecvd       float32              `protobuf:"fixed32,17,opt,name=NonFedTxsRecvd,proto3" json:"NonFedTxsRecvd,omitempty"`
	ContToOtherCmte      float32              `protobuf:"fixed32,18,opt,name=ContToOtherCmte,proto3" json:"ContToOtherCmte,omitempty"`
	IndExp               float32              `protobuf:"fixed32,19,opt,name=IndExp,proto3" json:"IndExp,omitempty"`
	PartyExp             float32              `protobuf:"fixed32,20,opt,name=PartyExp,proto3" json:"PartyExp,omitempty"`
	NonFedSharedExp      float32              `protobuf:"fixed32,21,opt,name=NonFedSharedExp,proto3" json:"NonFedSharedExp,omitempty"`
	CovgEndDate          *timestamp.Timestamp `protobuf:"bytes,22,opt,name=CovgEndDate,proto3" json:"CovgEndDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CmteFinancials) Reset()         { *m = CmteFinancials{} }
func (m *CmteFinancials) String() string { return proto.CompactTextString(m) }
func (*CmteFinancials) ProtoMessage()    {}
func (*CmteFinancials) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{25}
}

func (m *CmteFinancials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmteFinancials.Unmarshal(m, b)
}
func (m *CmteFinancials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmteFinancials.Marshal(b, m, deterministic)
}
func (m *CmteFinancials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmteFinancials.Merge(m, src)
}
func (m *CmteFinancials) XXX_Size() int {
	return xxx_messageInfo_CmteFinancials.Size(m)
}
func (m *CmteFinancials) XXX_DiscardUnknown() {
	xxx_messageInfo_CmteFinancials.DiscardUnknown(m)
}

var xxx_messageInfo_CmteFinancials proto.InternalMessageInfo

func (m *CmteFinancials) GetCmteID() string {
	if m != nil {
		return m.CmteID
	}
	return ""
}

func (m *CmteFinancials) GetTotalReceipts() float32 {
	if m != nil {
		return m.TotalReceipts
	}
	return 0
}

func (m *CmteFinancials) GetTxsFromAff() float32 {
	if m != nil {
		return m.TxsFromAff
	}
	return 0
}

func (m *CmteFinancials) GetIndvConts() float32 {
	if m != nil {
		return m.IndvConts
	}
	return 0
}

func (m *CmteFinancials) GetOtherConts() float32 {
	if m != nil {
		return m.OtherConts
	}
	return 0
}

func (m *CmteFinancials) GetCandCont() float32 {
	if m != nil {
		return m.CandCont
	}
	return 0
}

func (m *CmteFinancials) GetCandLoans() float32 {
	if m != nil {
		return m.CandLoans
	}
	return 0
}

func (m *CmteFinancials) GetTotalLoans() float32 {
	if m != nil {
		return m.TotalLoans
	}
	return 0
}

func (m *CmteFinancials) GetTotalDisb() float32 {
	if m != nil {
		return m.TotalDisb
	}
	return 0
}

func (m *CmteFinancials) GetTxToAff() float32 {
	if m != nil {
		return m.TxToAff
	}
	return 0
}

func (m *CmteFinancials) GetIndvRefunds() float32 {
	if m != nil {
		return m.IndvRefunds
	}
	return 0
}

func (m *CmteFinancials) GetOtherRefunds() float32 {
	if m != nil {
		return m.OtherRefunds
	}
	return 0
}

func (m *CmteFinancials) GetLoanRepay() float32 {
	if m != nil {
		return m.LoanRepay
	}
	return 0
}

func (m *CmteFinancials) GetCashBOP() float32 {
	if m != nil {
		return m.CashBOP
	}
	return 0
}

func (m *CmteFinancials) GetCashCOP() float32 {
	if m != nil {
		return m.CashCOP
	}
	return 0
}

func (m *CmteFinancials) GetDebtsOwed() float32 {
	if m != nil {
		return m.DebtsOwed
	}
	return 0
}

func (m *CmteFinancials) GetNonFedTxsRecvd() float32 {
	if m != nil {
		return m.NonFedTxsRecvd
	}
	return 0
}

func (m *CmteFinancials) GetContToOtherCmte() float32 {
	if m != nil {
		return m.ContToOtherCmte
	}
	return 0
}

func (m *CmteFinancials) GetIndExp() float32 {
	if m != nil {
		return m.IndExp
	}
	return 0
}

func (m *CmteFinancials) GetPartyExp() float32 {
	if m != nil {
		return m.PartyExp
	}
	return 0
}

func (m *CmteFinancials) GetNonFedSharedExp() float32 {
	if m != nil {
		return m.NonFedSharedExp
	}
	return 0
}

func (m *CmteFinancials) GetCovgEndDate() *timestamp.Timestamp {
	if m != nil {
		return m.CovgEndDate
	}
	return nil
}

type CmteTxData struct {
	CmteID                    string             `protobuf:"bytes,1,opt,name=CmteID,proto3" json:"CmteID,omitempty"`
	CandID                    string             `protobuf:"bytes,2,opt,name=CandID,proto3" json:"CandID,omitempty"`
	Party                     string             `protobuf:"bytes,3,opt,name=Party,proto3" json:"Party,omitempty"`
	ContributionsInAmt        float32            `protobuf:"fixed32,4,opt,name=ContributionsInAmt,proto3" json:"ContributionsInAmt,omitempty"`
	ContributionsInTxs        float32            `protobuf:"fixed32,5,opt,name=ContributionsInTxs,proto3" json:"ContributionsInTxs,omitempty"`
	AvgContributionIn         float32            `protobuf:"fixed32,6,opt,name=AvgContributionIn,proto3" json:"AvgContributionIn,omitempty"`
	OtherReceiptsInAmt        float32            `protobuf:"fixed32,7,opt,name=OtherReceiptsInAmt,proto3" json:"OtherReceiptsInAmt,omitempty"`
	OtherReceiptsInTxs        float32            `protobuf:"fixed32,8,opt,name=OtherReceiptsInTxs,proto3" json:"OtherReceiptsInTxs,omitempty"`
	AvgOtherIn                float32            `protobuf:"fixed32,9,opt,name=AvgOtherIn,proto3" json:"AvgOtherIn,omitempty"`
	TotalIncomingAmt          float32            `protobuf:"fixed32,10,opt,name=TotalIncomingAmt,proto3" json:"TotalIncomingAmt,omitempty"`
	TotalIncomingTxs          float32            `protobuf:"fixed32,11,opt,name=TotalIncomingTxs,proto3" json:"TotalIncomingTxs,omitempty"`
	AvgIncoming               float32            `protobuf:"fixed32,12,opt,name=AvgIncoming,proto3" json:"AvgIncoming,omitempty"`
	TransfersAmt              float32            `protobuf:"fixed32,13,opt,name=TransfersAmt,proto3" json:"TransfersAmt,omitempty"`
	TransfersTxs              float32            `protobuf:"fixed32,14,opt,name=TransfersTxs,proto3" json:"TransfersTxs,omitempty"`
	AvgTransfer               float32            `protobuf:"fixed32,15,opt,name=AvgTransfer,proto3" json:"AvgTransfer,omitempty"`
	TransfersList             []string           `protobuf:"bytes,16,rep,name=TransfersList,proto3" json:"TransfersList,omitempty"`
	ExpendituresAmt           float32            `protobuf:"fixed32,17,opt,name=ExpendituresAmt,proto3" json:"ExpendituresAmt,omitempty"`
	ExpendituresTxs           float32            `protobuf:"fixed32,18,opt,name=ExpendituresTxs,proto3" json:"ExpendituresTxs,omitempty"`
	AvgExpenditure            float32            `protobuf:"fixed32,19,opt,name=AvgExpenditure,proto3" json:"AvgExpenditure,omitempty"`
	TotalOutgoingAmt          float32            `protobuf:"fixed32,20,opt,name=TotalOutgoingAmt,proto3" json:"TotalOutgoingAmt,omitempty"`
	TotalOutgoingTxs          float32            `protobuf:"fixed32,21,opt,name=TotalOutgoingTxs,proto3" json:"TotalOutgoingTxs,omitempty"`
	AvgOutgoing               float32            `protobuf:"fixed32,22,opt,name=AvgOutgoing,proto3" json:"AvgOutgoing,omitempty"`
	NetBalance                float32            `protobuf:"fixed32,23,opt,name=NetBalance,proto3" json:"NetBalance,omitempty"`
	TopIndvContributorsAmt    []*TotalsMap       `protobuf:"bytes,24,rep,name=TopIndvContributorsAmt,proto3" json:"TopIndvContributorsAmt,omitempty"`
	TopIndvContributorsTxs    map[string]float32 `protobuf:"bytes,25,rep,name=TopIndvContributorsTxs,proto3" json:"TopIndvContributorsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopCmteOrgContributorsAmt []*TotalsMap       `protobuf:"bytes,26,rep,name=TopCmteOrgContributorsAmt,proto3" json:"TopCmteOrgContributorsAmt,omitempty"`
	TopCmteOrgContributorsTxs map[string]float32 `protobuf:"bytes,27,rep,name=TopCmteOrgContributorsTxs,proto3" json:"TopCmteOrgContributorsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TransferRecsAmt           []*TotalsMap       `protobuf:"bytes,28,rep,name=TransferRecsAmt,proto3" json:"TransferRecsAmt,omitempty"`
	TransferRecsTxs           map[string]float32 `protobuf:"bytes,29,rep,name=TransferRecsTxs,proto3" json:"TransferRecsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopExpRecipientsAmt       []*TotalsMap       `protobuf:"bytes,30,rep,name=TopExpRecipientsAmt,proto3" json:"TopExpRecipientsAmt,omitempty"`
	TopExpRecipientsTxs       map[string]float32 `protobuf:"bytes,31,rep,name=TopExpRecipientsTxs,proto3" json:"TopExpRecipientsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral      struct{}           `json:"-"`
	XXX_unrecognized          []byte             `json:"-"`
	XXX_sizecache             int32              `json:"-"`
}

func (m *CmteTxData) Reset()         { *m = CmteTxData{} }
func (m *CmteTxData) String() string { return proto.CompactTextString(m) }
func (*CmteTxData) ProtoMessage()    {}
func (*CmteTxData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{26}
}

func (m *CmteTxData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmteTxData.Unmarshal(m, b)
}
func (m *CmteTxData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmteTxData.Marshal(b, m, deterministic)
}
func (m *CmteTxData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmteTxData.Merge(m, src)
}
func (m *CmteTxData) XXX_Size() int {
	return xxx_messageInfo_CmteTxData.Size(m)
}
func (m *CmteTxData) XXX_DiscardUnknown() {
	xxx_messageInfo_CmteTxData.DiscardUnknown(m)
}

var xxx_messageInfo_CmteTxData proto.InternalMessageInfo

func (m *CmteTxData) GetCmteID() string {
	if m != nil {
		return m.CmteID
	}
	return ""
}

func (m *CmteTxData) GetCandID() string {
	if m != nil {
		return m.CandID
	}
	return ""
}

func (m *CmteTxData) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *CmteTxData) GetContributionsInAmt() float32 {
	if m != nil {
		return m.ContributionsInAmt
	}
	return 0
}

func (m *CmteTxData) GetContributionsInTxs() float32 {
	if m != nil {
		return m.ContributionsInTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgContributionIn() float32 {
	if m != nil {
		return m.AvgContributionIn
	}
	return 0
}

func (m *CmteTxData) GetOtherReceiptsInAmt() float32 {
	if m != nil {
		return m.OtherReceiptsInAmt
	}
	return 0
}

func (m *CmteTxData) GetOtherReceiptsInTxs() float32 {
	if m != nil {
		return m.OtherReceiptsInTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgOtherIn() float32 {
	if m != nil {
		return m.AvgOtherIn
	}
	return 0
}

func (m *CmteTxData) GetTotalIncomingAmt() float32 {
	if m != nil {
		return m.TotalIncomingAmt
	}
	return 0
}

func (m *CmteTxData) GetTotalIncomingTxs() float32 {
	if m != nil {
		return m.TotalIncomingTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgIncoming() float32 {
	if m != nil {
		return m.AvgIncoming
	}
	return 0
}

func (m *CmteTxData) GetTransfersAmt() float32 {
	if m != nil {
		return m.TransfersAmt
	}
	return 0
}

func (m *CmteTxData) GetTransfersTxs() float32 {
	if m != nil {
		return m.TransfersTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgTransfer() float32 {
	if m != nil {
		return m.AvgTransfer
	}
	return 0
}

func (m *CmteTxData) GetTransfersList() []string {
	if m != nil {
		return m.TransfersList
	}
	return nil
}

func (m *CmteTxData) GetExpendituresAmt() float32 {
	if m != nil {
		return m.ExpendituresAmt
	}
	return 0
}

func (m *CmteTxData) GetExpendituresTxs() float32 {
	if m != nil {
		return m.ExpendituresTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgExpenditure() float32 {
	if m != nil {
		return m.AvgExpenditure
	}
	return 0
}

func (m *CmteTxData) GetTotalOutgoingAmt() float32 {
	if m != nil {
		return m.TotalOutgoingAmt
	}
	return 0
}

func (m *CmteTxData) GetTotalOutgoingTxs() float32 {
	if m != nil {
		return m.TotalOutgoingTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgOutgoing() float32 {
	if m != nil {
		return m.AvgOutgoing
	}
	return 0
}

func (m *CmteTxData) GetNetBalance() float32 {
	if m != nil {
		return m.NetBalance
	}
	return 0
}

func (m *CmteTxData) GetTopIndvContributorsAmt() []*TotalsMap {
	if m != nil {
		return m.TopIndvContributorsAmt
	}
	return nil
}

func (m *CmteTxData) GetTopIndvContributorsTxs() map[string]float32 {
	if m != nil {
		return m.TopIndvContributorsTxs
	}
	return nil
}

func (m *CmteTxData) GetTopCmteOrgContributorsAmt() []*TotalsMap {
	if m != nil {
		return m.TopCmteOrgContributorsAmt
	}
	return nil
}

func (m *CmteTxData) GetTopCmteOrgContributorsTxs() map[string]float32 {
	if m != nil {
		return m.TopCmteOrgContributorsTxs
	}
	return nil
}

func (m *CmteTxData) GetTransferRecsAmt() []*TotalsMap {
	if m != nil {
		return m.TransferRecsAmt
	}
	return nil
}

func (m *CmteTxData) GetTransferRecsTxs() map[string]float32 {
	if m != nil {
		return m.TransferRecsTxs
	}
	return nil
}

func (m *CmteTxData) GetTopExpRecipientsAmt() []*TotalsMap {
	if m != nil {
		return m.TopExpRecipientsAmt
	}
	return nil
}

func (m *CmteTxData) GetTopExpRecipientsTxs() map[string]float32 {
	if m != nil {
		return m.TopExpRecipientsTxs
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "index.Empty")
	proto.RegisterType((*GetCachesRequest)(nil), "index.GetCachesRequest")
	proto.RegisterType((*GetCachesResponse)(nil), "index.GetCachesResponse")
	proto.RegisterType((*RankingsCache)(nil), "index.RankingsCache")
	proto.RegisterMapType((map[string]*RankingsMap)(nil), "index.RankingsCache.CacheEntry")
	proto.RegisterType((*RankingsMap)(nil), "index.RankingsMap")
	proto.RegisterMapType((map[string]*Rankings)(nil), "index.RankingsMap.EntryEntry")
	proto.RegisterType((*TotalsCache)(nil), "index.TotalsCache")
	proto.RegisterMapType((map[string]*YrTotalsMap)(nil), "index.TotalsCache.CacheEntry")
	proto.RegisterType((*YrTotalsMap)(nil), "index.YrTotalsMap")
	proto.RegisterMapType((map[string]*Totals)(nil), "index.YrTotalsMap.TotalsEntry")
	proto.RegisterType((*Rankings)(nil), "index.Rankings")
	proto.RegisterMapType((map[string]float32)(nil), "index.Rankings.RankingsEntry")
	proto.RegisterType((*Totals)(nil), "index.Totals")
	proto.RegisterType((*SearchIndexRequest)(nil), "index.SearchIndexRequest")
	proto.RegisterType((*SearchIndexResponse)(nil), "index.SearchIndexResponse")
	proto.RegisterType((*SearchResult)(nil), "index.SearchResult")
	proto.RegisterType((*LookupObjRequest)(nil), "index.LookupObjRequest")
	proto.RegisterType((*LookupObjResponse)(nil), "index.LookupObjResponse")
	proto.RegisterType((*LookupIndvRequest)(nil), "index.LookupIndvRequest")
	proto.RegisterType((*LookupIndvResponse)(nil), "index.LookupIndvResponse")
	proto.RegisterType((*LookupCandRequest)(nil), "index.LookupCandRequest")
	proto.RegisterType((*LookupCandResponse)(nil), "index.LookupCandResponse")
	proto.RegisterType((*LookupCmteRequest)(nil), "index.LookupCmteRequest")
	proto.RegisterType((*LookupCmteResponse)(nil), "index.LookupCmteResponse")
	proto.RegisterType((*TotalsMap)(nil), "index.TotalsMap")
	proto.RegisterType((*Individual)(nil), "index.Individual")
	proto.RegisterMapType((map[string]float32)(nil), "index.Individual.RecipientsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "index.Individual.SendersTxsEntry")
	proto.RegisterType((*Committee)(nil), "index.Committee")
	proto.RegisterType((*Candidate)(nil), "index.Candidate")
	proto.RegisterMapType((map[string]float32)(nil), "index.Candidate.DirectRecipientsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "index.Candidate.DirectSendersTxsEntry")
	proto.RegisterType((*CmpnFinancials)(nil), "index.CmpnFinancials")
	proto.RegisterType((*CmteFinancials)(nil), "index.CmteFinancials")
	proto.RegisterType((*CmteTxData)(nil), "index.CmteTxData")
	proto.RegisterMapType((map[string]float32)(nil), "index.CmteTxData.TopCmteOrgContributorsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "index.CmteTxData.TopExpRecipientsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "index.CmteTxData.TopIndvContributorsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "index.CmteTxData.TransferRecsTxsEntry")
}

func init() { proto.RegisterFile("index.proto", fileDescriptor_f750e0f7889345b5) }

var fileDescriptor_f750e0f7889345b5 = []byte{
	// 2637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0xcf, 0x6f, 0x1b, 0xc7,
	0xf5, 0x0f, 0x49, 0x51, 0x24, 0x1f, 0xf5, 0x83, 0x1a, 0xc9, 0xf6, 0x9a, 0xb1, 0x15, 0x7d, 0xf9,
	0x4d, 0x03, 0x27, 0x48, 0x98, 0xc4, 0x69, 0x82, 0xd4, 0xfd, 0x81, 0x48, 0xa4, 0x64, 0xb3, 0x70,
	0x4c, 0x61, 0xc5, 0x1e, 0x9c, 0xf6, 0xb2, 0x22, 0x47, 0xd4, 0xc6, 0xe2, 0xee, 0x66, 0x77, 0xc8,
	0x52, 0xfd, 0x17, 0x8a, 0xa2, 0x3d, 0xf4, 0x0f, 0x28, 0x7a, 0xe8, 0xa1, 0x40, 0xff, 0x83, 0xa2,
	0xbd, 0x15, 0xe8, 0xb1, 0xa7, 0xde, 0x73, 0x2c, 0x50, 0xa0, 0x7f, 0x42, 0xf1, 0x66, 0x66, 0x77,
	0x66, 0xf6, 0x87, 0x6d, 0x09, 0x46, 0x80, 0xe6, 0x62, 0x73, 0x3e, 0xf3, 0x99, 0x37, 0xef, 0xbd,
	0x79, 0xef, 0xed, 0x9b, 0x5d, 0x41, 0xd3, 0xf5, 0x26, 0x74, 0xd9, 0x0d, 0x42, 0x9f, 0xf9, 0xa4,
	0xca, 0x07, 0xed, 0x37, 0xa6, 0xbe, 0x3f, 0xbd, 0xa0, 0xef, 0x73, 0xf0, 0x74, 0x7e, 0xf6, 0x3e,
	0x73, 0x67, 0x34, 0x62, 0xce, 0x2c, 0x10, 0xbc, 0x4e, 0x0d, 0xaa, 0x87, 0xb3, 0x80, 0x5d, 0x76,
	0x7e, 0x01, 0xad, 0x87, 0x94, 0xf5, 0x9c, 0xf1, 0x39, 0x8d, 0x6c, 0xfa, 0xd5, 0x9c, 0x46, 0x8c,
	0xb4, 0xa1, 0x7e, 0x42, 0xc3, 0x05, 0x0d, 0x07, 0x7d, 0xab, 0xb4, 0x57, 0xba, 0xd7, 0xb0, 0x93,
	0x31, 0xf9, 0x14, 0x1a, 0xa3, 0x58, 0x96, 0x55, 0xde, 0x2b, 0xdd, 0x6b, 0xde, 0x6f, 0x77, 0xc5,
	0x6e, 0xdd, 0x78, 0xb7, 0x6e, 0xc2, 0xb0, 0x15, 0x99, 0xb4, 0xa0, 0xf2, 0x79, 0x34, 0xb5, 0x2a,
	0x5c, 0x20, 0xfe, 0xec, 0xfc, 0xbb, 0x04, 0x5b, 0xda, 0xe6, 0x51, 0xe0, 0x7b, 0x11, 0x7d, 0xee,
	0xee, 0x0f, 0x60, 0xdd, 0x76, 0xbc, 0x67, 0xae, 0x37, 0x8d, 0xf8, 0x2a, 0xa9, 0xc1, 0x4e, 0x57,
	0xf8, 0xc0, 0x98, 0xb3, 0x4d, 0x2a, 0xf9, 0x2e, 0x34, 0x47, 0x3e, 0x73, 0x2e, 0xe4, 0xca, 0x0a,
	0x5f, 0x49, 0xe4, 0x4a, 0x6d, 0xc6, 0xd6, 0x69, 0xa6, 0xbd, 0x2b, 0xd7, 0xb0, 0xb7, 0xaa, 0xec,
	0xfd, 0x6d, 0x29, 0xa5, 0x3e, 0xf9, 0x18, 0xaa, 0x42, 0x9b, 0xd2, 0x5e, 0xe5, 0x5e, 0xf3, 0xfe,
	0x1b, 0x79, 0x76, 0x74, 0xf9, 0xbf, 0x87, 0x1e, 0x0b, 0x2f, 0x6d, 0xc1, 0x6e, 0x3f, 0x06, 0x50,
	0x20, 0x6e, 0xf4, 0x8c, 0x5e, 0x4a, 0x5f, 0xe1, 0x4f, 0x72, 0x0f, 0xaa, 0x0b, 0xe7, 0x62, 0x1e,
	0xbb, 0x87, 0xa4, 0xc4, 0x7e, 0xee, 0x04, 0xb6, 0x20, 0x3c, 0x28, 0x7f, 0x5a, 0xea, 0xfc, 0xaa,
	0x04, 0x4d, 0x6d, 0x8a, 0x7c, 0x04, 0x55, 0x2e, 0x58, 0x2a, 0x75, 0x37, 0xbb, 0xba, 0xcb, 0xe7,
	0xa5, 0x4a, 0xfc, 0xbf, 0xf6, 0x00, 0x40, 0x81, 0x39, 0x2a, 0x7d, 0xc7, 0x54, 0x69, 0x33, 0x25,
	0x54, 0xd7, 0xe7, 0x37, 0x25, 0xe3, 0xa4, 0x50, 0x1f, 0xdd, 0x49, 0x77, 0xb3, 0x47, 0xf6, 0xea,
	0x5c, 0xf4, 0x34, 0x14, 0x62, 0x53, 0x2e, 0xfa, 0x75, 0x09, 0x9a, 0xda, 0x14, 0xf9, 0x04, 0x56,
	0xc5, 0x40, 0xea, 0xb4, 0x9b, 0x5d, 0x2e, 0xf5, 0x13, 0x4a, 0x49, 0x76, 0xfb, 0x51, 0x6c, 0x59,
	0x91, 0x5a, 0xff, 0x6f, 0xaa, 0xb5, 0x6e, 0xd8, 0xaa, 0x6b, 0xf4, 0x9f, 0x12, 0xd4, 0x63, 0xe7,
	0x91, 0x0d, 0x28, 0x27, 0xc9, 0x52, 0x1e, 0xf4, 0x09, 0x81, 0x95, 0xa7, 0xd4, 0x09, 0xb9, 0x90,
	0x86, 0xcd, 0x7f, 0x93, 0x9b, 0xb0, 0x7a, 0x30, 0x1f, 0x3f, 0xa3, 0x4c, 0x66, 0xa0, 0x1c, 0x61,
	0xba, 0xf5, 0x1c, 0x46, 0xa7, 0x7e, 0x78, 0xc9, 0xe3, 0xbb, 0x61, 0x27, 0x63, 0xb2, 0x03, 0xd5,
	0x63, 0x27, 0x64, 0x97, 0x32, 0x88, 0xc5, 0x80, 0x7c, 0x4f, 0xed, 0x6c, 0xad, 0xe6, 0x86, 0x48,
	0xf2, 0x43, 0x58, 0x9f, 0xd0, 0xdb, 0xdf, 0x57, 0x09, 0x50, 0xe4, 0x81, 0x1d, 0xdd, 0x03, 0x65,
	0xdd, 0x64, 0x16, 0x3b, 0xfd, 0xa5, 0xec, 0xd5, 0xed, 0xaa, 0x14, 0xd9, 0xb5, 0xa2, 0xdb, 0xb5,
	0x03, 0x55, 0x2e, 0x9f, 0x5b, 0x5b, 0xb6, 0xc5, 0xa0, 0xf3, 0xfb, 0x12, 0x90, 0x13, 0xea, 0x84,
	0xe3, 0xf3, 0x01, 0xda, 0x18, 0xd7, 0xc8, 0x16, 0x54, 0x7e, 0x92, 0xe8, 0x80, 0x3f, 0x8d, 0xba,
	0x55, 0x4e, 0xd5, 0x2d, 0x02, 0x2b, 0x23, 0xba, 0x8c, 0x5d, 0xcf, 0x7f, 0xbf, 0xd2, 0xca, 0xf2,
	0x97, 0x12, 0x6c, 0x1b, 0x4a, 0xca, 0x5a, 0x7a, 0x35, 0x2d, 0xdf, 0x83, 0x9a, 0x4d, 0xa3, 0xf9,
	0x05, 0x8b, 0xac, 0x0a, 0x3f, 0xd7, 0x6d, 0x79, 0xae, 0x42, 0xb4, 0x98, 0xb3, 0x63, 0xce, 0x2b,
	0x35, 0xe0, 0x0f, 0x25, 0x58, 0xd3, 0x77, 0xc9, 0x1c, 0xb1, 0x0a, 0xdf, 0xb2, 0x11, 0xbe, 0x04,
	0x56, 0x9e, 0x38, 0x33, 0x1a, 0x7b, 0x16, 0x7f, 0x23, 0xd6, 0x73, 0x93, 0xd3, 0xe5, 0xbf, 0xf1,
	0x70, 0x4f, 0x98, 0xc3, 0x68, 0x1c, 0xca, 0x7c, 0x80, 0xde, 0x38, 0x9c, 0x05, 0x17, 0xfe, 0x25,
	0x0d, 0xad, 0x55, 0xe1, 0x8d, 0x78, 0x8c, 0x2b, 0x30, 0x90, 0x22, 0xab, 0xb6, 0x57, 0xc1, 0x15,
	0x7c, 0xd0, 0xf9, 0x63, 0x09, 0x5a, 0x8f, 0x7d, 0xff, 0xd9, 0x3c, 0x18, 0x9e, 0x7e, 0x79, 0xbd,
	0x60, 0xb8, 0x03, 0x8d, 0xe1, 0xe9, 0x97, 0x74, 0xcc, 0x06, 0x13, 0xe1, 0xe8, 0x86, 0xad, 0x80,
	0x57, 0xea, 0xd5, 0x3f, 0x97, 0x60, 0x4b, 0x53, 0xf6, 0x7f, 0x2d, 0x28, 0xfe, 0x99, 0xa8, 0x3f,
	0xf0, 0x26, 0x8b, 0xeb, 0x39, 0xbb, 0x0d, 0x75, 0xe9, 0xdb, 0x7e, 0x5c, 0x06, 0xe2, 0xb1, 0x16,
	0x53, 0x2b, 0x46, 0x4c, 0x25, 0x27, 0x5f, 0xd5, 0x4e, 0xde, 0xb4, 0x6c, 0xf5, 0x1a, 0x96, 0xd5,
	0x94, 0x65, 0xbf, 0x2c, 0x03, 0xd1, 0x2d, 0xbb, 0xd6, 0xc9, 0x5c, 0xc7, 0xb4, 0x0f, 0x01, 0x06,
	0xde, 0xc4, 0x5d, 0xb8, 0x93, 0xb9, 0x2c, 0x74, 0xcd, 0xfb, 0x5b, 0xf2, 0x40, 0xd5, 0x84, 0xad,
	0x91, 0x94, 0x37, 0x56, 0x0b, 0xbd, 0x51, 0xbb, 0x86, 0x37, 0xea, 0x79, 0xe7, 0xdc, 0x73, 0xbc,
	0xc9, 0xb7, 0xe9, 0x9c, 0xff, 0x9a, 0x9c, 0xb3, 0xb0, 0xec, 0x1b, 0x3b, 0xe7, 0x2e, 0x34, 0x70,
	0x47, 0x77, 0x12, 0x97, 0xbc, 0xe6, 0xfd, 0x96, 0x3c, 0xe6, 0x04, 0xb7, 0x15, 0x85, 0x7c, 0x0c,
	0x70, 0xe4, 0x7a, 0x8e, 0x37, 0x76, 0xb1, 0xa9, 0x11, 0x56, 0xdf, 0x88, 0x17, 0xcc, 0x02, 0x4f,
	0x4d, 0xda, 0x1a, 0x31, 0xbf, 0x46, 0x9a, 0x1e, 0xac, 0x5f, 0xc3, 0x83, 0x8d, 0xdc, 0xd8, 0x98,
	0x31, 0xfa, 0x6d, 0x8a, 0x8d, 0x7f, 0xa9, 0xd8, 0xe0, 0x96, 0x7d, 0xa3, 0xb1, 0xe1, 0xcf, 0x66,
	0x2e, 0x63, 0x34, 0x13, 0x1b, 0x31, 0x6e, 0x2b, 0x0a, 0x79, 0x1b, 0x56, 0x47, 0xcb, 0xbe, 0xc3,
	0x1c, 0x69, 0xf1, 0x56, 0x12, 0x17, 0x8c, 0x8a, 0x09, 0x5b, 0x12, 0x52, 0x61, 0x54, 0x4b, 0x85,
	0x11, 0xa3, 0x2f, 0x0a, 0xa3, 0x7a, 0xa1, 0xb3, 0x1b, 0xd7, 0x70, 0x36, 0x28, 0x67, 0x7f, 0x08,
	0x0d, 0xd5, 0xbd, 0xa7, 0x7b, 0x8b, 0xa4, 0xf1, 0x2b, 0xeb, 0x8d, 0xdf, 0xef, 0x56, 0xf5, 0x5a,
	0x99, 0xd7, 0x73, 0xf2, 0xc6, 0xa3, 0x9c, 0xd3, 0x78, 0x54, 0xf2, 0x1a, 0x8f, 0x15, 0xbd, 0xf1,
	0x68, 0x41, 0xe5, 0x0b, 0x37, 0x88, 0x1f, 0x76, 0x5f, 0xb8, 0x01, 0xd9, 0x05, 0x18, 0x8e, 0xc7,
	0xf3, 0xc0, 0x61, 0xae, 0xef, 0xc9, 0x66, 0x44, 0x43, 0x8c, 0x56, 0xa5, 0x96, 0x6a, 0x55, 0x3a,
	0xb0, 0x36, 0x0a, 0x1d, 0x2f, 0x72, 0xc6, 0x48, 0x8d, 0xdd, 0x68, 0x60, 0x64, 0x4f, 0x5e, 0x3d,
	0x86, 0x73, 0xb6, 0x3f, 0x63, 0xdc, 0x9f, 0x65, 0x5b, 0x87, 0x74, 0xc6, 0x68, 0x19, 0x71, 0xef,
	0x69, 0x8c, 0xd1, 0x32, 0x42, 0x1d, 0xf6, 0x17, 0xd3, 0xd1, 0x72, 0x38, 0x67, 0x56, 0x93, 0x4f,
	0x27, 0x63, 0xd4, 0x9f, 0x53, 0x07, 0x1e, 0x8a, 0x5f, 0xe3, 0xb3, 0x1a, 0xa2, 0xcd, 0xa3, 0xf0,
	0x75, 0x63, 0x1e, 0x65, 0x5b, 0x50, 0xe3, 0xb2, 0x06, 0x9e, 0xb5, 0xc1, 0x27, 0xe3, 0x21, 0xae,
	0x7c, 0x42, 0xd9, 0x81, 0x73, 0xe1, 0x78, 0x63, 0x6a, 0x6d, 0x8a, 0x95, 0x0a, 0x21, 0x9f, 0xc0,
	0xba, 0x4d, 0xc7, 0x6e, 0xe0, 0x52, 0x8f, 0x45, 0xb8, 0x79, 0x8b, 0xf7, 0x29, 0x2d, 0xe3, 0xee,
	0x84, 0x17, 0x3a, 0x93, 0x46, 0x7e, 0xac, 0xaf, 0x43, 0xa5, 0xb6, 0xf8, 0xba, 0x37, 0x33, 0x8f,
	0xc3, 0xae, 0x41, 0x13, 0x77, 0x1a, 0x73, 0x29, 0xf9, 0x00, 0xe0, 0x84, 0x7a, 0x13, 0x1a, 0x72,
	0x05, 0x48, 0x81, 0x02, 0x1a, 0x87, 0xec, 0x27, 0x2b, 0x70, 0xeb, 0x6d, 0xbe, 0xe2, 0xff, 0xb2,
	0x5b, 0x2b, 0x8e, 0xd8, 0x57, 0x5b, 0xd4, 0xfe, 0x0c, 0x48, 0x56, 0xb3, 0xab, 0x5c, 0xa9, 0xda,
	0x3f, 0x84, 0xcd, 0xd4, 0x06, 0x57, 0xba, 0x91, 0xfd, 0xbd, 0xac, 0x95, 0x92, 0x97, 0xca, 0x90,
	0x36, 0xd4, 0x47, 0x21, 0x8d, 0xb4, 0x96, 0x3d, 0x19, 0x5f, 0xa1, 0x6d, 0x97, 0xd9, 0xb3, 0xaa,
	0xb2, 0x67, 0x0f, 0x9a, 0x7d, 0x1a, 0xb9, 0x53, 0x4f, 0xa4, 0x8f, 0x48, 0x10, 0x1d, 0xe2, 0x57,
	0xb0, 0xcb, 0x80, 0xca, 0xbe, 0x83, 0xff, 0x56, 0xf7, 0xc0, 0x86, 0x7e, 0x0f, 0xdc, 0xc5, 0x22,
	0x76, 0xe1, 0x7a, 0xd3, 0xa3, 0x90, 0x7e, 0x25, 0x8b, 0x88, 0x86, 0x60, 0xa4, 0x0e, 0xc3, 0x29,
	0x17, 0xd6, 0xe4, 0x93, 0xf1, 0x10, 0xf3, 0xb0, 0xe7, 0x7b, 0x1e, 0x1d, 0x33, 0x3a, 0x19, 0x86,
	0x53, 0x9e, 0x05, 0x0d, 0xdb, 0xc0, 0xb0, 0x2a, 0xe3, 0x63, 0x77, 0xd0, 0xe7, 0x39, 0xd0, 0xb0,
	0xe5, 0xa8, 0xf3, 0xa7, 0xba, 0xf6, 0xc8, 0x7e, 0x29, 0x5f, 0x26, 0xda, 0x57, 0x74, 0xed, 0xb1,
	0x4e, 0x5c, 0xd0, 0x31, 0xf3, 0x9e, 0x86, 0xdc, 0x93, 0x55, 0x3b, 0x19, 0xa3, 0x97, 0x86, 0x67,
	0x67, 0xee, 0x98, 0xea, 0x3e, 0xd5, 0x21, 0xd4, 0x4e, 0x0c, 0xa5, 0x73, 0xe5, 0x08, 0x3d, 0x7e,
	0xdc, 0xeb, 0xc5, 0x8f, 0xaf, 0xe3, 0x5e, 0x2f, 0x39, 0xad, 0x7a, 0xde, 0x69, 0x35, 0x72, 0x4e,
	0x0b, 0xd4, 0x69, 0xdd, 0x83, 0xcd, 0x21, 0x3b, 0xa7, 0xe1, 0xfe, 0xd9, 0x99, 0x7b, 0xe1, 0x3a,
	0x8c, 0x46, 0x56, 0x93, 0x97, 0xac, 0x34, 0x4c, 0xde, 0x81, 0x96, 0x5e, 0xc5, 0x1e, 0xbb, 0x11,
	0xd6, 0x16, 0xa4, 0x66, 0x70, 0xce, 0xc5, 0x54, 0xeb, 0xbb, 0x21, 0x3e, 0x00, 0x79, 0x1d, 0x12,
	0x75, 0x26, 0x83, 0x67, 0xb8, 0x98, 0x83, 0x1b, 0x39, 0x5c, 0xcc, 0xed, 0x3d, 0x68, 0xee, 0x2f,
	0xa6, 0x31, 0x22, 0x0b, 0x90, 0x0e, 0x91, 0x77, 0x61, 0x4b, 0x5b, 0x25, 0x2b, 0x6c, 0x8b, 0xf3,
	0xb2, 0x13, 0x59, 0xb6, 0xa8, 0x3d, 0x39, 0x6c, 0xdc, 0xbd, 0x03, 0x6b, 0xc9, 0x56, 0x58, 0x77,
	0x09, 0x27, 0x1a, 0x18, 0xe9, 0x02, 0x51, 0xf5, 0x50, 0xc0, 0xa3, 0xa5, 0xb5, 0xcd, 0x99, 0x39,
	0x33, 0xa4, 0x0f, 0x3b, 0xe2, 0xb7, 0x51, 0x10, 0x23, 0x6b, 0xa7, 0xa0, 0x6e, 0xe5, 0xb2, 0xc9,
	0x4f, 0x61, 0x3b, 0x8d, 0xa3, 0x25, 0x37, 0xb8, 0x90, 0xb7, 0xd3, 0xdd, 0x66, 0x37, 0x87, 0x2b,
	0x4a, 0x5a, 0x9e, 0x14, 0xf2, 0x23, 0xd8, 0x12, 0xb0, 0x2a, 0x99, 0x91, 0x75, 0xb3, 0x40, 0xbf,
	0x2c, 0x95, 0xd8, 0xd0, 0x32, 0x40, 0xd4, 0xec, 0x16, 0x5f, 0xfe, 0x56, 0x81, 0x66, 0xe9, 0x4a,
	0x9b, 0x59, 0xdf, 0x3e, 0x02, 0xab, 0xc8, 0x88, 0x2b, 0x55, 0xdd, 0x1e, 0xdc, 0xc8, 0xdd, 0xf2,
	0x4a, 0xb5, 0xf7, 0xeb, 0x1a, 0x6c, 0x98, 0x9d, 0xb9, 0x56, 0x5a, 0x4a, 0x7a, 0x69, 0xc9, 0x2d,
	0x1e, 0x16, 0xd4, 0x78, 0xbd, 0xe8, 0x4d, 0x64, 0xf9, 0x88, 0x87, 0x05, 0x2f, 0xc7, 0xde, 0x84,
	0x75, 0xee, 0x6f, 0x9b, 0x8e, 0xa9, 0x1b, 0xb0, 0x48, 0xbe, 0x24, 0x33, 0x41, 0xde, 0x42, 0x60,
	0x5a, 0x1e, 0x85, 0xfb, 0x73, 0x76, 0xce, 0x6b, 0x08, 0xb6, 0x10, 0x0a, 0x4a, 0xe4, 0xf4, 0xdd,
	0xe8, 0x34, 0xc2, 0x33, 0xad, 0x69, 0x72, 0x62, 0x30, 0x91, 0x33, 0xf2, 0xb9, 0x9c, 0xba, 0x26,
	0x47, 0x40, 0xdc, 0xd6, 0xe1, 0xa3, 0x83, 0xe1, 0xb1, 0xec, 0x64, 0xe4, 0x48, 0xe2, 0xbd, 0xe1,
	0xb1, 0xec, 0x5f, 0xe4, 0x88, 0xdc, 0x11, 0xd5, 0xb5, 0xe7, 0x7b, 0x2c, 0x92, 0xbd, 0x8b, 0x02,
	0xe2, 0xd9, 0xc7, 0xbe, 0xe3, 0x45, 0xb2, 0x77, 0x51, 0x00, 0x6f, 0xcd, 0xb0, 0x2e, 0x89, 0x69,
	0xd9, 0xba, 0x28, 0x04, 0x6d, 0x8a, 0xc9, 0x36, 0x0d, 0x9c, 0x4b, 0x59, 0x49, 0x4c, 0x90, 0xbc,
	0x05, 0x1b, 0xc9, 0x1a, 0x41, 0x13, 0x95, 0x24, 0x85, 0x8a, 0x47, 0xd9, 0x29, 0x8b, 0x86, 0x3f,
	0xa7, 0x93, 0x83, 0x4b, 0x59, 0x46, 0x74, 0x08, 0x25, 0xc9, 0xc6, 0x69, 0xb2, 0x10, 0x06, 0x89,
	0xea, 0x91, 0x42, 0xd3, 0xe5, 0x9e, 0x64, 0xcb, 0x3d, 0xea, 0xc4, 0x87, 0x7d, 0x37, 0x62, 0xa1,
	0x3b, 0x66, 0xbc, 0x68, 0x34, 0xec, 0x14, 0x8a, 0x45, 0xe8, 0x24, 0xa0, 0x63, 0xfe, 0x20, 0xc1,
	0xe7, 0xeb, 0x8e, 0x78, 0xb0, 0xe9, 0x18, 0x72, 0x8e, 0x43, 0x77, 0x96, 0x70, 0x6e, 0x08, 0x8e,
	0x8e, 0xa1, 0x46, 0xf6, 0xdc, 0x4b, 0x28, 0x37, 0x85, 0x46, 0x1a, 0x84, 0x8c, 0x87, 0x54, 0x31,
	0x6e, 0x09, 0x86, 0x06, 0xa1, 0xce, 0xda, 0xf0, 0x78, 0xcc, 0x2c, 0x4b, 0x58, 0x6f, 0xa2, 0x89,
	0xbf, 0xf1, 0xde, 0x21, 0xbc, 0x74, 0x5b, 0xf3, 0x77, 0x82, 0xe2, 0x03, 0xf3, 0x98, 0x5d, 0x0a,
	0x46, 0x5b, 0x34, 0xb5, 0xf1, 0x98, 0x3c, 0x00, 0xe8, 0x2d, 0xa6, 0x87, 0xde, 0xa4, 0x8f, 0x0e,
	0x7c, 0xfd, 0x85, 0x77, 0x10, 0x8d, 0x8d, 0x96, 0x88, 0x97, 0x3b, 0x67, 0x73, 0x6f, 0x12, 0x59,
	0x77, 0xc4, 0x39, 0x6a, 0x10, 0x32, 0xc4, 0xd5, 0x4f, 0x30, 0xee, 0x0a, 0x86, 0x06, 0x75, 0xbe,
	0xae, 0x62, 0x92, 0xeb, 0xf7, 0x26, 0x1e, 0xe0, 0x33, 0x46, 0xb5, 0x24, 0xe7, 0xa3, 0x6c, 0x82,
	0x96, 0xf3, 0x12, 0x14, 0xbb, 0xf0, 0x65, 0x74, 0x14, 0xfa, 0xb3, 0xfd, 0xb3, 0x33, 0x9e, 0xf9,
	0xd8, 0x85, 0x27, 0x08, 0x26, 0x82, 0x8a, 0xaa, 0x15, 0x91, 0x08, 0x2a, 0xa0, 0xe2, 0x44, 0x10,
	0xd3, 0x55, 0x2d, 0x11, 0x12, 0x57, 0xc6, 0x39, 0x25, 0x73, 0x3f, 0x19, 0x9b, 0x29, 0x56, 0xcb,
	0x49, 0x31, 0xae, 0xa8, 0x98, 0xae, 0x6b, 0xb7, 0x03, 0x31, 0x7f, 0x47, 0xde, 0xdf, 0xb0, 0x42,
	0xc8, 0x8c, 0x57, 0x00, 0x16, 0xb3, 0xd1, 0x72, 0xe4, 0xa3, 0x49, 0x22, 0xeb, 0xe3, 0x61, 0xfa,
	0x10, 0x9a, 0xd9, 0x43, 0xe8, 0xc0, 0x1a, 0xb7, 0x20, 0xa6, 0x88, 0xec, 0x37, 0x30, 0xdc, 0x5d,
	0x65, 0xad, 0xc8, 0x7f, 0x05, 0xe0, 0xee, 0x3d, 0x27, 0x3a, 0xc7, 0x5a, 0x24, 0x6f, 0x2e, 0x72,
	0x18, 0xcf, 0x60, 0x35, 0xda, 0x54, 0x33, 0xb2, 0x1c, 0x25, 0x19, 0x2d, 0x53, 0x5c, 0x01, 0x18,
	0xba, 0x4f, 0x7c, 0xef, 0x88, 0x4e, 0x46, 0xcb, 0xc8, 0xa6, 0xe3, 0xc5, 0x24, 0x4e, 0x70, 0x13,
	0xc5, 0x3e, 0x0a, 0x7d, 0x3b, 0xf2, 0x93, 0x90, 0x96, 0xed, 0x41, 0x1a, 0xc6, 0xa8, 0x19, 0x78,
	0x93, 0xc3, 0x65, 0x20, 0xbb, 0x02, 0x39, 0xe2, 0xc1, 0x8f, 0xf5, 0x1d, 0x67, 0x76, 0x64, 0xf0,
	0xcb, 0x31, 0x4a, 0x17, 0xfb, 0x9d, 0x9c, 0x3b, 0x21, 0xe5, 0x8b, 0x6f, 0x08, 0xe9, 0x29, 0x98,
	0xfc, 0x00, 0x9a, 0x3d, 0x5f, 0xe5, 0xc9, 0xcd, 0x17, 0xe6, 0x89, 0x4e, 0xef, 0xfc, 0x6d, 0x03,
	0x40, 0xbd, 0x4b, 0x28, 0x0c, 0x70, 0xf5, 0x74, 0x2b, 0x1b, 0x4f, 0xb7, 0xfc, 0x36, 0xb8, 0x0b,
	0x04, 0x7d, 0x10, 0xba, 0xa7, 0x73, 0xde, 0x21, 0x8a, 0x76, 0x50, 0x44, 0x74, 0xce, 0x4c, 0x0e,
	0x1f, 0x3b, 0x86, 0x6a, 0x2e, 0x1f, 0xfb, 0x93, 0x77, 0x61, 0x6b, 0x7f, 0x31, 0xd5, 0x27, 0x06,
	0x9e, 0x8c, 0xf9, 0xec, 0x04, 0x4a, 0x97, 0x01, 0x25, 0xf2, 0x50, 0x68, 0x23, 0xb2, 0x20, 0x67,
	0x26, 0x87, 0x8f, 0xda, 0xd4, 0x73, 0xf9, 0xa8, 0xcd, 0x2e, 0xc0, 0xfe, 0x62, 0xca, 0x27, 0x06,
	0x9e, 0xcc, 0x0f, 0x0d, 0x49, 0xda, 0xdd, 0x81, 0x37, 0xf6, 0x67, 0xae, 0x37, 0xc5, 0xdd, 0x41,
	0x6b, 0x77, 0x35, 0x3c, 0xc3, 0xc5, 0x9d, 0x9b, 0x39, 0x5c, 0xd5, 0x1a, 0xc7, 0x88, 0xcc, 0x1d,
	0x1d, 0x4a, 0x5e, 0x4d, 0x9c, 0xc9, 0xab, 0xb1, 0xc8, 0x1e, 0x03, 0x33, 0x38, 0xaa, 0x11, 0x37,
	0x30, 0xb9, 0x53, 0x0c, 0x69, 0x4d, 0x78, 0x0c, 0xf1, 0x02, 0x18, 0xaf, 0xe0, 0xf7, 0x84, 0x16,
	0xbf, 0x27, 0x98, 0x20, 0x06, 0xf5, 0xe1, 0x32, 0xa0, 0xde, 0xc4, 0x65, 0xf3, 0x90, 0x72, 0x95,
	0x44, 0x6e, 0xa5, 0xe1, 0x34, 0x13, 0x15, 0x23, 0x59, 0x26, 0xea, 0xf6, 0x16, 0x6c, 0xec, 0x2f,
	0xa6, 0x1a, 0x2a, 0x93, 0x2c, 0x85, 0x26, 0x9e, 0x1d, 0xce, 0xd9, 0xd4, 0x97, 0xa7, 0xb0, 0xa3,
	0x79, 0x56, 0xc3, 0x33, 0x5c, 0xd1, 0x59, 0x67, 0xb9, 0xca, 0x37, 0x31, 0xc2, 0xd3, 0x4f, 0xf8,
	0x26, 0x86, 0x52, 0xaf, 0x50, 0x6e, 0x65, 0x5e, 0xa1, 0x3c, 0x82, 0x9b, 0x23, 0x3f, 0x88, 0x0b,
	0x3d, 0x0f, 0x5c, 0x5f, 0x9c, 0x97, 0x55, 0xd0, 0x72, 0x17, 0xf0, 0x09, 0xcd, 0x95, 0x84, 0xda,
	0xdf, 0xe6, 0x92, 0xde, 0xcb, 0xbc, 0x3c, 0xec, 0xe6, 0xf3, 0x45, 0x13, 0x5e, 0x20, 0x8c, 0x3c,
	0x81, 0xdb, 0x23, 0x9f, 0xbf, 0x38, 0x1d, 0x86, 0xd3, 0xb4, 0xce, 0xed, 0x02, 0x9d, 0x8b, 0x97,
	0x10, 0xaf, 0x48, 0x1e, 0x6a, 0xfe, 0x3a, 0x97, 0xf7, 0x41, 0xae, 0xe6, 0xf9, 0x4b, 0x84, 0xf2,
	0xc5, 0x22, 0xc9, 0x03, 0xd8, 0x8c, 0xe3, 0xd2, 0xa6, 0x63, 0xae, 0xf5, 0x9d, 0x02, 0xad, 0xd3,
	0x44, 0x72, 0x6c, 0xae, 0x45, 0x0d, 0xef, 0x9a, 0x37, 0x1b, 0x4d, 0x43, 0x93, 0x28, 0xf4, 0x4a,
	0x2f, 0x27, 0x07, 0xb0, 0x3d, 0xf2, 0x83, 0xc3, 0x65, 0x60, 0xbe, 0x47, 0xdb, 0x2d, 0xd0, 0x28,
	0x8f, 0x4c, 0x7e, 0x96, 0x95, 0x81, 0x9a, 0xbd, 0xc1, 0x65, 0xbc, 0x93, 0xeb, 0xbb, 0x34, 0x59,
	0x5e, 0x07, 0x73, 0x66, 0xda, 0x03, 0x78, 0xfd, 0x39, 0x61, 0x72, 0xa5, 0xdb, 0xd7, 0x63, 0xd8,
	0x7d, 0xfe, 0xb9, 0x5d, 0x49, 0xda, 0x01, 0xec, 0xe4, 0xf9, 0xf8, 0x4a, 0x32, 0x8e, 0xc0, 0x2a,
	0xf2, 0xc6, 0x55, 0xe4, 0xdc, 0xff, 0x47, 0x05, 0xaa, 0xfc, 0xfb, 0x3f, 0xf9, 0x0c, 0x1a, 0xc9,
	0x1f, 0x56, 0x91, 0x5b, 0xd2, 0xf9, 0xe9, 0xbf, 0xf3, 0x6a, 0x5b, 0xd9, 0x09, 0xf1, 0x11, 0xa2,
	0xf3, 0x1a, 0x39, 0x82, 0xa6, 0xf6, 0x07, 0x05, 0xe4, 0xb6, 0xf1, 0xd1, 0x57, 0xff, 0x4b, 0x88,
	0x76, 0x3b, 0x6f, 0x2a, 0x91, 0xd3, 0x87, 0xf5, 0xe4, 0x0b, 0x34, 0x1d, 0x33, 0xa5, 0x4d, 0xfa,
	0x23, 0x7a, 0xa2, 0x4d, 0xe6, 0x83, 0x35, 0xd7, 0x66, 0xfd, 0x21, 0x65, 0xda, 0xdb, 0x78, 0x93,
	0xac, 0x7d, 0x1e, 0x6e, 0xdf, 0xce, 0x99, 0x49, 0xe4, 0x1c, 0xc2, 0x1a, 0x1a, 0x9b, 0xbc, 0xb2,
	0x34, 0xc5, 0x68, 0x5f, 0x98, 0x52, 0x62, 0xf4, 0x2f, 0x34, 0x4a, 0x4c, 0xf2, 0xb6, 0x2e, 0x25,
	0x46, 0x7d, 0xc4, 0x4c, 0x8b, 0xd1, 0x3e, 0x02, 0x76, 0x5e, 0x23, 0x1d, 0x58, 0x79, 0xe2, 0x0f,
	0x03, 0xb2, 0x26, 0x49, 0xfc, 0x2f, 0xf2, 0xda, 0xc6, 0xe8, 0x74, 0x95, 0x77, 0x4f, 0x1f, 0xfd,
	0x37, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x4b, 0x5b, 0x12, 0xe6, 0x27, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IndexClient is the client API for Index service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IndexClient interface {
	// get rankings cache and yearly totals cache and return to server
	GetCaches(ctx context.Context, in *GetCachesRequest, opts ...grpc.CallOption) (*GetCachesResponse, error)
	// take user-input search query and return a list of matching results
	SearchIndex(ctx context.Context, in *SearchIndexRequest, opts ...grpc.CallOption) (*SearchIndexResponse, error)
	// lookup object summary data for objec list by ID
	LookupObjects(ctx context.Context, in *LookupObjRequest, opts ...grpc.CallOption) (*LookupObjResponse, error)
	// get Individual datasets from DynamoDB
	GetIndividual(ctx context.Context, in *LookupIndvRequest, opts ...grpc.CallOption) (*LookupIndvResponse, error)
	// get Committee datasets from DynamoDB
	GetCommittee(ctx context.Context, in *LookupCmteRequest, opts ...grpc.CallOption) (*LookupCmteResponse, error)
	// get Candidate datasets from DynamoDB
	GetCandidate(ctx context.Context, in *LookupCandRequest, opts ...grpc.CallOption) (*LookupCandResponse, error)
	// One empty request, ZERO processing, followed by one empty response
	NoOp(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type indexClient struct {
	cc grpc.ClientConnInterface
}

func NewIndexClient(cc grpc.ClientConnInterface) IndexClient {
	return &indexClient{cc}
}

func (c *indexClient) GetCaches(ctx context.Context, in *GetCachesRequest, opts ...grpc.CallOption) (*GetCachesResponse, error) {
	out := new(GetCachesResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetCaches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) SearchIndex(ctx context.Context, in *SearchIndexRequest, opts ...grpc.CallOption) (*SearchIndexResponse, error) {
	out := new(SearchIndexResponse)
	err := c.cc.Invoke(ctx, "/index.Index/SearchIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) LookupObjects(ctx context.Context, in *LookupObjRequest, opts ...grpc.CallOption) (*LookupObjResponse, error) {
	out := new(LookupObjResponse)
	err := c.cc.Invoke(ctx, "/index.Index/LookupObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetIndividual(ctx context.Context, in *LookupIndvRequest, opts ...grpc.CallOption) (*LookupIndvResponse, error) {
	out := new(LookupIndvResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetIndividual", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetCommittee(ctx context.Context, in *LookupCmteRequest, opts ...grpc.CallOption) (*LookupCmteResponse, error) {
	out := new(LookupCmteResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetCommittee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) GetCandidate(ctx context.Context, in *LookupCandRequest, opts ...grpc.CallOption) (*LookupCandResponse, error) {
	out := new(LookupCandResponse)
	err := c.cc.Invoke(ctx, "/index.Index/GetCandidate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexClient) NoOp(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/index.Index/NoOp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexServer is the server API for Index service.
type IndexServer interface {
	// get rankings cache and yearly totals cache and return to server
	GetCaches(context.Context, *GetCachesRequest) (*GetCachesResponse, error)
	// take user-input search query and return a list of matching results
	SearchIndex(context.Context, *SearchIndexRequest) (*SearchIndexResponse, error)
	// lookup object summary data for objec list by ID
	LookupObjects(context.Context, *LookupObjRequest) (*LookupObjResponse, error)
	// get Individual datasets from DynamoDB
	GetIndividual(context.Context, *LookupIndvRequest) (*LookupIndvResponse, error)
	// get Committee datasets from DynamoDB
	GetCommittee(context.Context, *LookupCmteRequest) (*LookupCmteResponse, error)
	// get Candidate datasets from DynamoDB
	GetCandidate(context.Context, *LookupCandRequest) (*LookupCandResponse, error)
	// One empty request, ZERO processing, followed by one empty response
	NoOp(context.Context, *Empty) (*Empty, error)
}

// UnimplementedIndexServer can be embedded to have forward compatible implementations.
type UnimplementedIndexServer struct {
}

func (*UnimplementedIndexServer) GetCaches(ctx context.Context, req *GetCachesRequest) (*GetCachesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCaches not implemented")
}
func (*UnimplementedIndexServer) SearchIndex(ctx context.Context, req *SearchIndexRequest) (*SearchIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchIndex not implemented")
}
func (*UnimplementedIndexServer) LookupObjects(ctx context.Context, req *LookupObjRequest) (*LookupObjResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LookupObjects not implemented")
}
func (*UnimplementedIndexServer) GetIndividual(ctx context.Context, req *LookupIndvRequest) (*LookupIndvResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIndividual not implemented")
}
func (*UnimplementedIndexServer) GetCommittee(ctx context.Context, req *LookupCmteRequest) (*LookupCmteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommittee not implemented")
}
func (*UnimplementedIndexServer) GetCandidate(ctx context.Context, req *LookupCandRequest) (*LookupCandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCandidate not implemented")
}
func (*UnimplementedIndexServer) NoOp(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoOp not implemented")
}

func RegisterIndexServer(s *grpc.Server, srv IndexServer) {
	s.RegisterService(&_Index_serviceDesc, srv)
}

func _Index_GetCaches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCachesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetCaches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetCaches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetCaches(ctx, req.(*GetCachesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_SearchIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).SearchIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/SearchIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).SearchIndex(ctx, req.(*SearchIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_LookupObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupObjRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).LookupObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/LookupObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).LookupObjects(ctx, req.(*LookupObjRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetIndividual_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupIndvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetIndividual(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetIndividual",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetIndividual(ctx, req.(*LookupIndvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetCommittee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupCmteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetCommittee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetCommittee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetCommittee(ctx, req.(*LookupCmteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_GetCandidate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupCandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).GetCandidate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/GetCandidate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).GetCandidate(ctx, req.(*LookupCandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Index_NoOp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexServer).NoOp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/index.Index/NoOp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexServer).NoOp(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Index_serviceDesc = grpc.ServiceDesc{
	ServiceName: "index.Index",
	HandlerType: (*IndexServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCaches",
			Handler:    _Index_GetCaches_Handler,
		},
		{
			MethodName: "SearchIndex",
			Handler:    _Index_SearchIndex_Handler,
		},
		{
			MethodName: "LookupObjects",
			Handler:    _Index_LookupObjects_Handler,
		},
		{
			MethodName: "GetIndividual",
			Handler:    _Index_GetIndividual_Handler,
		},
		{
			MethodName: "GetCommittee",
			Handler:    _Index_GetCommittee_Handler,
		},
		{
			MethodName: "GetCandidate",
			Handler:    _Index_GetCandidate_Handler,
		},
		{
			MethodName: "NoOp",
			Handler:    _Index_NoOp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index.proto",
}
