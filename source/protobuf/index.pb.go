// Code generated by protoc-gen-go. DO NOT EDIT.
// source: index.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SearchResult struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	Bucket               string   `protobuf:"bytes,5,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
	Years                []string `protobuf:"bytes,6,rep,name=Years,proto3" json:"Years,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResult) Reset()         { *m = SearchResult{} }
func (m *SearchResult) String() string { return proto.CompactTextString(m) }
func (*SearchResult) ProtoMessage()    {}
func (*SearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{0}
}

func (m *SearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResult.Unmarshal(m, b)
}
func (m *SearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResult.Marshal(b, m, deterministic)
}
func (m *SearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResult.Merge(m, src)
}
func (m *SearchResult) XXX_Size() int {
	return xxx_messageInfo_SearchResult.Size(m)
}
func (m *SearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResult proto.InternalMessageInfo

func (m *SearchResult) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SearchResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchResult) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *SearchResult) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *SearchResult) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *SearchResult) GetYears() []string {
	if m != nil {
		return m.Years
	}
	return nil
}

type SearchEntry struct {
	Lookup               map[string]*SearchResult `protobuf:"bytes,1,rep,name=Lookup,proto3" json:"Lookup,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SearchEntry) Reset()         { *m = SearchEntry{} }
func (m *SearchEntry) String() string { return proto.CompactTextString(m) }
func (*SearchEntry) ProtoMessage()    {}
func (*SearchEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{1}
}

func (m *SearchEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchEntry.Unmarshal(m, b)
}
func (m *SearchEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchEntry.Marshal(b, m, deterministic)
}
func (m *SearchEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchEntry.Merge(m, src)
}
func (m *SearchEntry) XXX_Size() int {
	return xxx_messageInfo_SearchEntry.Size(m)
}
func (m *SearchEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchEntry.DiscardUnknown(m)
}

var xxx_messageInfo_SearchEntry proto.InternalMessageInfo

func (m *SearchEntry) GetLookup() map[string]*SearchResult {
	if m != nil {
		return m.Lookup
	}
	return nil
}

type IndexData struct {
	Size                 float32              `protobuf:"fixed32,1,opt,name=Size,proto3" json:"Size,omitempty"`
	LastUpdated          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=LastUpdated,proto3" json:"LastUpdated,omitempty"`
	Completed            map[string]bool      `protobuf:"bytes,3,rep,name=Completed,proto3" json:"Completed,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IndexData) Reset()         { *m = IndexData{} }
func (m *IndexData) String() string { return proto.CompactTextString(m) }
func (*IndexData) ProtoMessage()    {}
func (*IndexData) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{2}
}

func (m *IndexData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexData.Unmarshal(m, b)
}
func (m *IndexData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexData.Marshal(b, m, deterministic)
}
func (m *IndexData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexData.Merge(m, src)
}
func (m *IndexData) XXX_Size() int {
	return xxx_messageInfo_IndexData.Size(m)
}
func (m *IndexData) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexData.DiscardUnknown(m)
}

var xxx_messageInfo_IndexData proto.InternalMessageInfo

func (m *IndexData) GetSize() float32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *IndexData) GetLastUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdated
	}
	return nil
}

func (m *IndexData) GetCompleted() map[string]bool {
	if m != nil {
		return m.Completed
	}
	return nil
}

type PartitionMap struct {
	Partitions           map[string]bool `protobuf:"bytes,1,rep,name=Partitions,proto3" json:"Partitions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PartitionMap) Reset()         { *m = PartitionMap{} }
func (m *PartitionMap) String() string { return proto.CompactTextString(m) }
func (*PartitionMap) ProtoMessage()    {}
func (*PartitionMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{3}
}

func (m *PartitionMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartitionMap.Unmarshal(m, b)
}
func (m *PartitionMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartitionMap.Marshal(b, m, deterministic)
}
func (m *PartitionMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartitionMap.Merge(m, src)
}
func (m *PartitionMap) XXX_Size() int {
	return xxx_messageInfo_PartitionMap.Size(m)
}
func (m *PartitionMap) XXX_DiscardUnknown() {
	xxx_messageInfo_PartitionMap.DiscardUnknown(m)
}

var xxx_messageInfo_PartitionMap proto.InternalMessageInfo

func (m *PartitionMap) GetPartitions() map[string]bool {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func init() {
	proto.RegisterType((*SearchResult)(nil), "protobuf.SearchResult")
	proto.RegisterType((*SearchEntry)(nil), "protobuf.SearchEntry")
	proto.RegisterMapType((map[string]*SearchResult)(nil), "protobuf.SearchEntry.LookupEntry")
	proto.RegisterType((*IndexData)(nil), "protobuf.IndexData")
	proto.RegisterMapType((map[string]bool)(nil), "protobuf.IndexData.CompletedEntry")
	proto.RegisterType((*PartitionMap)(nil), "protobuf.PartitionMap")
	proto.RegisterMapType((map[string]bool)(nil), "protobuf.PartitionMap.PartitionsEntry")
}

func init() { proto.RegisterFile("index.proto", fileDescriptor_f750e0f7889345b5) }

var fileDescriptor_f750e0f7889345b5 = []byte{
	// 390 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0x41, 0x4f, 0xea, 0x40,
	0x10, 0xce, 0xb6, 0xd0, 0xc0, 0x94, 0xf0, 0x5e, 0x36, 0x84, 0x34, 0xbd, 0x3c, 0x5e, 0x0f, 0x2f,
	0x1c, 0x5e, 0x4a, 0x82, 0x17, 0x35, 0x98, 0x18, 0x41, 0x13, 0x12, 0x34, 0x5a, 0xf4, 0xe0, 0x71,
	0x81, 0x15, 0x1b, 0x5a, 0xb6, 0x69, 0xb7, 0x46, 0xfc, 0x09, 0xde, 0x3d, 0xf9, 0xdb, 0xfc, 0x2f,
	0x66, 0x77, 0x0b, 0x5d, 0x89, 0x17, 0x4f, 0x3b, 0xf3, 0xed, 0xf7, 0xcd, 0xcc, 0x37, 0x03, 0x76,
	0xb8, 0x5e, 0xd0, 0x67, 0x3f, 0x49, 0x19, 0x67, 0xb8, 0x26, 0x9f, 0x59, 0xfe, 0xe0, 0xfe, 0x59,
	0x32, 0xb6, 0x8c, 0x68, 0x6f, 0x0b, 0xf4, 0x78, 0x18, 0xd3, 0x8c, 0x93, 0x38, 0x51, 0x54, 0xef,
	0x15, 0x41, 0x63, 0x4a, 0x49, 0x3a, 0x7f, 0x0c, 0x68, 0x96, 0x47, 0x1c, 0x37, 0xc1, 0x18, 0x8f,
	0x1c, 0xd4, 0x41, 0xdd, 0x7a, 0x60, 0x8c, 0x47, 0x18, 0x43, 0xe5, 0x8a, 0xc4, 0xd4, 0x31, 0x24,
	0x22, 0x63, 0x81, 0x0d, 0x43, 0xbe, 0x71, 0x4c, 0x85, 0x89, 0x18, 0xb7, 0xa0, 0x3a, 0xe5, 0x84,
	0x53, 0xa7, 0x22, 0x41, 0x95, 0xe0, 0x36, 0x58, 0x67, 0xf9, 0x7c, 0x45, 0xb9, 0x53, 0x95, 0x70,
	0x91, 0x09, 0xf6, 0x3d, 0x25, 0x69, 0xe6, 0x58, 0x1d, 0x53, 0xb0, 0x65, 0xe2, 0xbd, 0x23, 0xb0,
	0xd5, 0x30, 0xe7, 0x6b, 0x9e, 0x6e, 0xf0, 0x11, 0x58, 0x13, 0xc6, 0x56, 0x79, 0xe2, 0xa0, 0x8e,
	0xd9, 0xb5, 0xfb, 0x7f, 0xfd, 0xad, 0x0f, 0x5f, 0xa3, 0xf9, 0x8a, 0x23, 0xe3, 0xa0, 0x10, 0xb8,
	0x37, 0x60, 0x6b, 0x30, 0xfe, 0x0d, 0xe6, 0x8a, 0x6e, 0x0a, 0x5b, 0x22, 0xc4, 0xff, 0xa1, 0xfa,
	0x44, 0xa2, 0x5c, 0x19, 0xb3, 0xfb, 0xed, 0xfd, 0xd2, 0x6a, 0x1d, 0x81, 0x22, 0x1d, 0x1b, 0x87,
	0xc8, 0xfb, 0x40, 0x50, 0x1f, 0x8b, 0x2d, 0x8f, 0x08, 0x27, 0x62, 0x07, 0xd3, 0xf0, 0x85, 0xca,
	0x92, 0x46, 0x20, 0x63, 0x3c, 0x00, 0x7b, 0x42, 0x32, 0x7e, 0x97, 0x2c, 0x08, 0xa7, 0x8b, 0xa2,
	0xb2, 0xeb, 0xab, 0x1b, 0x94, 0x0d, 0x6e, 0xb7, 0x37, 0x08, 0x74, 0x3a, 0x3e, 0x85, 0xfa, 0x90,
	0xc5, 0x49, 0x44, 0x85, 0xd6, 0x94, 0x86, 0xbd, 0x52, 0xb4, 0xeb, 0xec, 0xef, 0x48, 0xca, 0x71,
	0x29, 0x72, 0x07, 0xd0, 0xfc, 0xfa, 0xf9, 0x8d, 0xef, 0x96, 0xee, 0xbb, 0xa6, 0xfb, 0x7b, 0x43,
	0xd0, 0xb8, 0x26, 0x29, 0x0f, 0x79, 0xc8, 0xd6, 0x97, 0x24, 0xc1, 0x17, 0x00, 0xbb, 0x3c, 0x2b,
	0x4e, 0xf0, 0xaf, 0x9c, 0x48, 0xe7, 0x96, 0x49, 0xa6, 0xa6, 0xd2, 0x94, 0xee, 0x09, 0xfc, 0xda,
	0xfb, 0xfe, 0xc9, 0x5c, 0x33, 0x4b, 0x76, 0x3c, 0xf8, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x37, 0xef,
	0x50, 0x77, 0xe3, 0x02, 0x00, 0x00,
}
