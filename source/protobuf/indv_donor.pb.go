// Code generated by protoc-gen-go. DO NOT EDIT.
// source: indv_donor.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Individual struct {
	ID                   string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	City                 string             `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`
	State                string             `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	Zip                  string             `protobuf:"bytes,5,opt,name=Zip,proto3" json:"Zip,omitempty"`
	Occupation           string             `protobuf:"bytes,6,opt,name=Occupation,proto3" json:"Occupation,omitempty"`
	Employer             string             `protobuf:"bytes,7,opt,name=Employer,proto3" json:"Employer,omitempty"`
	Transactions         []string           `protobuf:"bytes,8,rep,name=Transactions,proto3" json:"Transactions,omitempty"`
	TotalOutAmt          float32            `protobuf:"fixed32,9,opt,name=TotalOutAmt,proto3" json:"TotalOutAmt,omitempty"`
	TotalOutTxs          float32            `protobuf:"fixed32,10,opt,name=TotalOutTxs,proto3" json:"TotalOutTxs,omitempty"`
	AvgTxOut             float32            `protobuf:"fixed32,11,opt,name=AvgTxOut,proto3" json:"AvgTxOut,omitempty"`
	TotalInAmt           float32            `protobuf:"fixed32,12,opt,name=TotalInAmt,proto3" json:"TotalInAmt,omitempty"`
	TotalInTxs           float32            `protobuf:"fixed32,13,opt,name=TotalInTxs,proto3" json:"TotalInTxs,omitempty"`
	AvgTxIn              float32            `protobuf:"fixed32,14,opt,name=AvgTxIn,proto3" json:"AvgTxIn,omitempty"`
	NetBalance           float32            `protobuf:"fixed32,15,opt,name=NetBalance,proto3" json:"NetBalance,omitempty"`
	RecipientsAmt        map[string]float32 `protobuf:"bytes,16,rep,name=RecipientsAmt,proto3" json:"RecipientsAmt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	RecipientsTxs        map[string]float32 `protobuf:"bytes,17,rep,name=RecipientsTxs,proto3" json:"RecipientsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	SendersAmt           map[string]float32 `protobuf:"bytes,18,rep,name=SendersAmt,proto3" json:"SendersAmt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	SendersTxs           map[string]float32 `protobuf:"bytes,19,rep,name=SendersTxs,proto3" json:"SendersTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Individual) Reset()         { *m = Individual{} }
func (m *Individual) String() string { return proto.CompactTextString(m) }
func (*Individual) ProtoMessage()    {}
func (*Individual) Descriptor() ([]byte, []int) {
	return fileDescriptor_98d40319702848d1, []int{0}
}

func (m *Individual) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Individual.Unmarshal(m, b)
}
func (m *Individual) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Individual.Marshal(b, m, deterministic)
}
func (m *Individual) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Individual.Merge(m, src)
}
func (m *Individual) XXX_Size() int {
	return xxx_messageInfo_Individual.Size(m)
}
func (m *Individual) XXX_DiscardUnknown() {
	xxx_messageInfo_Individual.DiscardUnknown(m)
}

var xxx_messageInfo_Individual proto.InternalMessageInfo

func (m *Individual) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Individual) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Individual) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Individual) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Individual) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Individual) GetOccupation() string {
	if m != nil {
		return m.Occupation
	}
	return ""
}

func (m *Individual) GetEmployer() string {
	if m != nil {
		return m.Employer
	}
	return ""
}

func (m *Individual) GetTransactions() []string {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Individual) GetTotalOutAmt() float32 {
	if m != nil {
		return m.TotalOutAmt
	}
	return 0
}

func (m *Individual) GetTotalOutTxs() float32 {
	if m != nil {
		return m.TotalOutTxs
	}
	return 0
}

func (m *Individual) GetAvgTxOut() float32 {
	if m != nil {
		return m.AvgTxOut
	}
	return 0
}

func (m *Individual) GetTotalInAmt() float32 {
	if m != nil {
		return m.TotalInAmt
	}
	return 0
}

func (m *Individual) GetTotalInTxs() float32 {
	if m != nil {
		return m.TotalInTxs
	}
	return 0
}

func (m *Individual) GetAvgTxIn() float32 {
	if m != nil {
		return m.AvgTxIn
	}
	return 0
}

func (m *Individual) GetNetBalance() float32 {
	if m != nil {
		return m.NetBalance
	}
	return 0
}

func (m *Individual) GetRecipientsAmt() map[string]float32 {
	if m != nil {
		return m.RecipientsAmt
	}
	return nil
}

func (m *Individual) GetRecipientsTxs() map[string]float32 {
	if m != nil {
		return m.RecipientsTxs
	}
	return nil
}

func (m *Individual) GetSendersAmt() map[string]float32 {
	if m != nil {
		return m.SendersAmt
	}
	return nil
}

func (m *Individual) GetSendersTxs() map[string]float32 {
	if m != nil {
		return m.SendersTxs
	}
	return nil
}

func init() {
	proto.RegisterType((*Individual)(nil), "protobuf.Individual")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.Individual.RecipientsAmtEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.Individual.RecipientsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.Individual.SendersAmtEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.Individual.SendersTxsEntry")
}

func init() { proto.RegisterFile("indv_donor.proto", fileDescriptor_98d40319702848d1) }

var fileDescriptor_98d40319702848d1 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0xaf, 0x93, 0x40,
	0x10, 0xc7, 0x03, 0xbc, 0xf7, 0xda, 0x4e, 0x5f, 0x7f, 0xb8, 0x7a, 0xd8, 0xf4, 0x60, 0x48, 0x63,
	0x22, 0x27, 0x0e, 0x7a, 0x31, 0x26, 0x26, 0x56, 0xdb, 0x03, 0x07, 0xdb, 0x84, 0x72, 0xf2, 0x62,
	0xb6, 0xb0, 0x9a, 0x8d, 0x74, 0x21, 0xb0, 0x10, 0xf8, 0x37, 0xfd, 0x8b, 0xcc, 0x2c, 0xb6, 0x5d,
	0xac, 0x89, 0xda, 0x13, 0x33, 0xdf, 0xef, 0xcc, 0x67, 0x67, 0xd9, 0x81, 0xb9, 0x90, 0x49, 0xfd,
	0x25, 0xc9, 0x64, 0x56, 0xf8, 0x79, 0x91, 0xa9, 0x8c, 0x0c, 0xf5, 0xe7, 0x50, 0x7d, 0x5d, 0xfe,
	0x18, 0x00, 0x04, 0x32, 0x11, 0xb5, 0x48, 0x2a, 0x96, 0x92, 0x29, 0xd8, 0xc1, 0x9a, 0x5a, 0xae,
	0xe5, 0x8d, 0x42, 0x3b, 0x58, 0x13, 0x02, 0x77, 0x5b, 0x76, 0xe4, 0xd4, 0xd6, 0x8a, 0x8e, 0x51,
	0xfb, 0x28, 0x54, 0x4b, 0x9d, 0x4e, 0xc3, 0x98, 0x3c, 0x83, 0xfb, 0xbd, 0x62, 0x8a, 0xd3, 0x3b,
	0x2d, 0x76, 0x09, 0x99, 0x83, 0xf3, 0x59, 0xe4, 0xf4, 0x5e, 0x6b, 0x18, 0x92, 0xe7, 0x00, 0xbb,
	0x38, 0xae, 0x72, 0xa6, 0x44, 0x26, 0xe9, 0x83, 0x36, 0x0c, 0x85, 0x2c, 0x60, 0xb8, 0x39, 0xe6,
	0x69, 0xd6, 0xf2, 0x82, 0x0e, 0xb4, 0x7b, 0xce, 0xc9, 0x12, 0x1e, 0xa3, 0x82, 0xc9, 0x92, 0xc5,
	0x58, 0x5a, 0xd2, 0xa1, 0xeb, 0x78, 0xa3, 0xb0, 0xa7, 0x11, 0x17, 0xc6, 0x51, 0xa6, 0x58, 0xba,
	0xab, 0xd4, 0xea, 0xa8, 0xe8, 0xc8, 0xb5, 0x3c, 0x3b, 0x34, 0x25, 0xb3, 0x22, 0x6a, 0x4a, 0x0a,
	0xfd, 0x8a, 0xa8, 0x29, 0x71, 0x86, 0x55, 0xfd, 0x2d, 0x6a, 0x76, 0x95, 0xa2, 0x63, 0x6d, 0x9f,
	0x73, 0x9c, 0x5f, 0x97, 0x06, 0x12, 0xf1, 0x8f, 0xda, 0x35, 0x14, 0xc3, 0x47, 0xf8, 0xa4, 0xe7,
	0x23, 0x9b, 0xc2, 0x40, 0xb3, 0x02, 0x49, 0xa7, 0xda, 0x3c, 0xa5, 0xd8, 0xb9, 0xe5, 0xea, 0x03,
	0x4b, 0x99, 0x8c, 0x39, 0x9d, 0x75, 0x9d, 0x17, 0x85, 0x7c, 0x82, 0x49, 0xc8, 0x63, 0x91, 0x0b,
	0x2e, 0x55, 0x89, 0x87, 0xcf, 0x5d, 0xc7, 0x1b, 0xbf, 0x7a, 0xe9, 0x9f, 0x9e, 0xd2, 0xbf, 0x3c,
	0xa3, 0xdf, 0xab, 0xdc, 0x48, 0x55, 0xb4, 0x61, 0xbf, 0xbb, 0x8f, 0xc3, 0x59, 0x9f, 0xfc, 0x13,
	0x2e, 0x6a, 0xca, 0x2b, 0x1c, 0xde, 0x6b, 0x0d, 0xb0, 0xe7, 0x32, 0xe1, 0x85, 0x1e, 0x8d, 0x68,
	0xd6, 0x8b, 0x3f, 0xb2, 0x2e, 0x65, 0x1d, 0xc8, 0xe8, 0x33, 0x28, 0x38, 0xd1, 0xd3, 0xbf, 0x53,
	0xce, 0xe3, 0x18, 0x7d, 0x8b, 0xf7, 0x40, 0xae, 0xef, 0x8f, 0xbb, 0xf8, 0x9d, 0xb7, 0xbf, 0x56,
	0x1b, 0x43, 0xdc, 0xd9, 0x9a, 0xa5, 0x55, 0xb7, 0xdc, 0x76, 0xd8, 0x25, 0x6f, 0xed, 0x37, 0x56,
	0x9f, 0x70, 0x3a, 0xe3, 0xbf, 0x08, 0xef, 0x60, 0xf6, 0xdb, 0x45, 0x6f, 0x6c, 0xbf, 0xe5, 0xf4,
	0xc3, 0x83, 0xfe, 0x65, 0xaf, 0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x42, 0x23, 0x92, 0xf9,
	0x03, 0x00, 0x00,
}
