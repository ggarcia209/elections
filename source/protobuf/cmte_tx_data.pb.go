// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmte_tx_data.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CmteEntry struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Total                float32  `protobuf:"fixed32,2,opt,name=Total,proto3" json:"Total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmteEntry) Reset()         { *m = CmteEntry{} }
func (m *CmteEntry) String() string { return proto.CompactTextString(m) }
func (*CmteEntry) ProtoMessage()    {}
func (*CmteEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_e66b7cd10fa5e378, []int{0}
}

func (m *CmteEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmteEntry.Unmarshal(m, b)
}
func (m *CmteEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmteEntry.Marshal(b, m, deterministic)
}
func (m *CmteEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmteEntry.Merge(m, src)
}
func (m *CmteEntry) XXX_Size() int {
	return xxx_messageInfo_CmteEntry.Size(m)
}
func (m *CmteEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CmteEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CmteEntry proto.InternalMessageInfo

func (m *CmteEntry) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CmteEntry) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type CmteTxData struct {
	CmteID                         string             `protobuf:"bytes,1,opt,name=CmteID,proto3" json:"CmteID,omitempty"`
	CandID                         string             `protobuf:"bytes,2,opt,name=CandID,proto3" json:"CandID,omitempty"`
	Party                          string             `protobuf:"bytes,3,opt,name=Party,proto3" json:"Party,omitempty"`
	ContributionsInAmt             float32            `protobuf:"fixed32,4,opt,name=ContributionsInAmt,proto3" json:"ContributionsInAmt,omitempty"`
	ContributionsInTxs             float32            `protobuf:"fixed32,5,opt,name=ContributionsInTxs,proto3" json:"ContributionsInTxs,omitempty"`
	AvgContributionIn              float32            `protobuf:"fixed32,6,opt,name=AvgContributionIn,proto3" json:"AvgContributionIn,omitempty"`
	OtherReceiptsInAmt             float32            `protobuf:"fixed32,7,opt,name=OtherReceiptsInAmt,proto3" json:"OtherReceiptsInAmt,omitempty"`
	OtherReceiptsInTxs             float32            `protobuf:"fixed32,8,opt,name=OtherReceiptsInTxs,proto3" json:"OtherReceiptsInTxs,omitempty"`
	AvgOtherIn                     float32            `protobuf:"fixed32,9,opt,name=AvgOtherIn,proto3" json:"AvgOtherIn,omitempty"`
	TotalIncomingAmt               float32            `protobuf:"fixed32,10,opt,name=TotalIncomingAmt,proto3" json:"TotalIncomingAmt,omitempty"`
	TotalIncomingTxs               float32            `protobuf:"fixed32,11,opt,name=TotalIncomingTxs,proto3" json:"TotalIncomingTxs,omitempty"`
	AvgIncoming                    float32            `protobuf:"fixed32,12,opt,name=AvgIncoming,proto3" json:"AvgIncoming,omitempty"`
	TransfersAmt                   float32            `protobuf:"fixed32,13,opt,name=TransfersAmt,proto3" json:"TransfersAmt,omitempty"`
	TransfersTxs                   float32            `protobuf:"fixed32,14,opt,name=TransfersTxs,proto3" json:"TransfersTxs,omitempty"`
	AvgTransfer                    float32            `protobuf:"fixed32,15,opt,name=AvgTransfer,proto3" json:"AvgTransfer,omitempty"`
	TransfersList                  []string           `protobuf:"bytes,16,rep,name=TransfersList,proto3" json:"TransfersList,omitempty"`
	ExpendituresAmt                float32            `protobuf:"fixed32,17,opt,name=ExpendituresAmt,proto3" json:"ExpendituresAmt,omitempty"`
	ExpendituresTxs                float32            `protobuf:"fixed32,18,opt,name=ExpendituresTxs,proto3" json:"ExpendituresTxs,omitempty"`
	AvgExpenditure                 float32            `protobuf:"fixed32,19,opt,name=AvgExpenditure,proto3" json:"AvgExpenditure,omitempty"`
	TotalOutgoingAmt               float32            `protobuf:"fixed32,20,opt,name=TotalOutgoingAmt,proto3" json:"TotalOutgoingAmt,omitempty"`
	TotalOutgoingTxs               float32            `protobuf:"fixed32,21,opt,name=TotalOutgoingTxs,proto3" json:"TotalOutgoingTxs,omitempty"`
	AvgOutgoing                    float32            `protobuf:"fixed32,22,opt,name=AvgOutgoing,proto3" json:"AvgOutgoing,omitempty"`
	NetBalance                     float32            `protobuf:"fixed32,23,opt,name=NetBalance,proto3" json:"NetBalance,omitempty"`
	TopIndvContributorsAmt         map[string]float32 `protobuf:"bytes,24,rep,name=TopIndvContributorsAmt,proto3" json:"TopIndvContributorsAmt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopIndvContributorsTxs         map[string]float32 `protobuf:"bytes,25,rep,name=TopIndvContributorsTxs,proto3" json:"TopIndvContributorsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopIndvContributorThreshold    []*CmteEntry       `protobuf:"bytes,26,rep,name=TopIndvContributorThreshold,proto3" json:"TopIndvContributorThreshold,omitempty"`
	TopCmteOrgContributorsAmt      map[string]float32 `protobuf:"bytes,27,rep,name=TopCmteOrgContributorsAmt,proto3" json:"TopCmteOrgContributorsAmt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopCmteOrgContributorsTxs      map[string]float32 `protobuf:"bytes,28,rep,name=TopCmteOrgContributorsTxs,proto3" json:"TopCmteOrgContributorsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopCmteOrgContributorThreshold []*CmteEntry       `protobuf:"bytes,29,rep,name=TopCmteOrgContributorThreshold,proto3" json:"TopCmteOrgContributorThreshold,omitempty"`
	TransferRecsAmt                map[string]float32 `protobuf:"bytes,30,rep,name=TransferRecsAmt,proto3" json:"TransferRecsAmt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TransferRecsTxs                map[string]float32 `protobuf:"bytes,31,rep,name=TransferRecsTxs,proto3" json:"TransferRecsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopExpRecipientsAmt            map[string]float32 `protobuf:"bytes,32,rep,name=TopExpRecipientsAmt,proto3" json:"TopExpRecipientsAmt,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopExpRecipientsTxs            map[string]float32 `protobuf:"bytes,33,rep,name=TopExpRecipientsTxs,proto3" json:"TopExpRecipientsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	TopExpThreshold                []*CmteEntry       `protobuf:"bytes,34,rep,name=TopExpThreshold,proto3" json:"TopExpThreshold,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}           `json:"-"`
	XXX_unrecognized               []byte             `json:"-"`
	XXX_sizecache                  int32              `json:"-"`
}

func (m *CmteTxData) Reset()         { *m = CmteTxData{} }
func (m *CmteTxData) String() string { return proto.CompactTextString(m) }
func (*CmteTxData) ProtoMessage()    {}
func (*CmteTxData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e66b7cd10fa5e378, []int{1}
}

func (m *CmteTxData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmteTxData.Unmarshal(m, b)
}
func (m *CmteTxData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmteTxData.Marshal(b, m, deterministic)
}
func (m *CmteTxData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmteTxData.Merge(m, src)
}
func (m *CmteTxData) XXX_Size() int {
	return xxx_messageInfo_CmteTxData.Size(m)
}
func (m *CmteTxData) XXX_DiscardUnknown() {
	xxx_messageInfo_CmteTxData.DiscardUnknown(m)
}

var xxx_messageInfo_CmteTxData proto.InternalMessageInfo

func (m *CmteTxData) GetCmteID() string {
	if m != nil {
		return m.CmteID
	}
	return ""
}

func (m *CmteTxData) GetCandID() string {
	if m != nil {
		return m.CandID
	}
	return ""
}

func (m *CmteTxData) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *CmteTxData) GetContributionsInAmt() float32 {
	if m != nil {
		return m.ContributionsInAmt
	}
	return 0
}

func (m *CmteTxData) GetContributionsInTxs() float32 {
	if m != nil {
		return m.ContributionsInTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgContributionIn() float32 {
	if m != nil {
		return m.AvgContributionIn
	}
	return 0
}

func (m *CmteTxData) GetOtherReceiptsInAmt() float32 {
	if m != nil {
		return m.OtherReceiptsInAmt
	}
	return 0
}

func (m *CmteTxData) GetOtherReceiptsInTxs() float32 {
	if m != nil {
		return m.OtherReceiptsInTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgOtherIn() float32 {
	if m != nil {
		return m.AvgOtherIn
	}
	return 0
}

func (m *CmteTxData) GetTotalIncomingAmt() float32 {
	if m != nil {
		return m.TotalIncomingAmt
	}
	return 0
}

func (m *CmteTxData) GetTotalIncomingTxs() float32 {
	if m != nil {
		return m.TotalIncomingTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgIncoming() float32 {
	if m != nil {
		return m.AvgIncoming
	}
	return 0
}

func (m *CmteTxData) GetTransfersAmt() float32 {
	if m != nil {
		return m.TransfersAmt
	}
	return 0
}

func (m *CmteTxData) GetTransfersTxs() float32 {
	if m != nil {
		return m.TransfersTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgTransfer() float32 {
	if m != nil {
		return m.AvgTransfer
	}
	return 0
}

func (m *CmteTxData) GetTransfersList() []string {
	if m != nil {
		return m.TransfersList
	}
	return nil
}

func (m *CmteTxData) GetExpendituresAmt() float32 {
	if m != nil {
		return m.ExpendituresAmt
	}
	return 0
}

func (m *CmteTxData) GetExpendituresTxs() float32 {
	if m != nil {
		return m.ExpendituresTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgExpenditure() float32 {
	if m != nil {
		return m.AvgExpenditure
	}
	return 0
}

func (m *CmteTxData) GetTotalOutgoingAmt() float32 {
	if m != nil {
		return m.TotalOutgoingAmt
	}
	return 0
}

func (m *CmteTxData) GetTotalOutgoingTxs() float32 {
	if m != nil {
		return m.TotalOutgoingTxs
	}
	return 0
}

func (m *CmteTxData) GetAvgOutgoing() float32 {
	if m != nil {
		return m.AvgOutgoing
	}
	return 0
}

func (m *CmteTxData) GetNetBalance() float32 {
	if m != nil {
		return m.NetBalance
	}
	return 0
}

func (m *CmteTxData) GetTopIndvContributorsAmt() map[string]float32 {
	if m != nil {
		return m.TopIndvContributorsAmt
	}
	return nil
}

func (m *CmteTxData) GetTopIndvContributorsTxs() map[string]float32 {
	if m != nil {
		return m.TopIndvContributorsTxs
	}
	return nil
}

func (m *CmteTxData) GetTopIndvContributorThreshold() []*CmteEntry {
	if m != nil {
		return m.TopIndvContributorThreshold
	}
	return nil
}

func (m *CmteTxData) GetTopCmteOrgContributorsAmt() map[string]float32 {
	if m != nil {
		return m.TopCmteOrgContributorsAmt
	}
	return nil
}

func (m *CmteTxData) GetTopCmteOrgContributorsTxs() map[string]float32 {
	if m != nil {
		return m.TopCmteOrgContributorsTxs
	}
	return nil
}

func (m *CmteTxData) GetTopCmteOrgContributorThreshold() []*CmteEntry {
	if m != nil {
		return m.TopCmteOrgContributorThreshold
	}
	return nil
}

func (m *CmteTxData) GetTransferRecsAmt() map[string]float32 {
	if m != nil {
		return m.TransferRecsAmt
	}
	return nil
}

func (m *CmteTxData) GetTransferRecsTxs() map[string]float32 {
	if m != nil {
		return m.TransferRecsTxs
	}
	return nil
}

func (m *CmteTxData) GetTopExpRecipientsAmt() map[string]float32 {
	if m != nil {
		return m.TopExpRecipientsAmt
	}
	return nil
}

func (m *CmteTxData) GetTopExpRecipientsTxs() map[string]float32 {
	if m != nil {
		return m.TopExpRecipientsTxs
	}
	return nil
}

func (m *CmteTxData) GetTopExpThreshold() []*CmteEntry {
	if m != nil {
		return m.TopExpThreshold
	}
	return nil
}

func init() {
	proto.RegisterType((*CmteEntry)(nil), "protobuf.CmteEntry")
	proto.RegisterType((*CmteTxData)(nil), "protobuf.CmteTxData")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.CmteTxData.TopCmteOrgContributorsAmtEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.CmteTxData.TopCmteOrgContributorsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.CmteTxData.TopExpRecipientsAmtEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.CmteTxData.TopExpRecipientsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.CmteTxData.TopIndvContributorsAmtEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.CmteTxData.TopIndvContributorsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.CmteTxData.TransferRecsAmtEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.CmteTxData.TransferRecsTxsEntry")
}

func init() { proto.RegisterFile("cmte_tx_data.proto", fileDescriptor_e66b7cd10fa5e378) }

var fileDescriptor_e66b7cd10fa5e378 = []byte{
	// 702 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x55, 0xdb, 0xdf, 0xf6, 0x5b, 0xef, 0xfe, 0x74, 0x73, 0xc7, 0xf0, 0x36, 0x18, 0xa5, 0x42,
	0xa8, 0x20, 0xa8, 0x80, 0xbd, 0x20, 0x24, 0x1e, 0xba, 0x75, 0x48, 0x91, 0x26, 0x86, 0x42, 0x78,
	0xe2, 0x61, 0xca, 0x5a, 0x2f, 0x8d, 0x68, 0xed, 0x90, 0xb8, 0x55, 0xf6, 0x79, 0xf9, 0x22, 0xc8,
	0x37, 0x4d, 0xda, 0x26, 0x36, 0xd0, 0xee, 0xa9, 0xf5, 0xf1, 0xb9, 0xe7, 0x5c, 0x1f, 0x5f, 0x2b,
	0x40, 0x7a, 0x23, 0xc9, 0xae, 0x65, 0x7c, 0xdd, 0x77, 0xa5, 0xdb, 0x0e, 0x42, 0x21, 0x05, 0xd9,
	0xc0, 0x9f, 0x9b, 0xf1, 0x6d, 0xf3, 0x2d, 0x54, 0xcf, 0x47, 0x92, 0x5d, 0x70, 0x19, 0xde, 0x91,
	0x1d, 0x28, 0x5b, 0x5d, 0x5a, 0x6a, 0x94, 0x5a, 0x55, 0xbb, 0x6c, 0x75, 0xc9, 0x3e, 0xac, 0x39,
	0x42, 0xba, 0x43, 0x5a, 0x6e, 0x94, 0x5a, 0x65, 0x3b, 0x59, 0x34, 0x7f, 0xd5, 0x01, 0x54, 0x8d,
	0x13, 0x77, 0x5d, 0xe9, 0x92, 0x03, 0x58, 0x57, 0xab, 0xac, 0x70, 0xba, 0x42, 0xdc, 0xe5, 0x7d,
	0xab, 0x8b, 0xd5, 0x0a, 0xc7, 0x95, 0x12, 0xfd, 0xe2, 0x86, 0xf2, 0x8e, 0x56, 0x10, 0x4e, 0x16,
	0xa4, 0x0d, 0xe4, 0x5c, 0x70, 0x19, 0xfa, 0x37, 0x63, 0xe9, 0x0b, 0x1e, 0x59, 0xbc, 0x33, 0x92,
	0xf4, 0x3f, 0xf4, 0xd5, 0xec, 0x68, 0xf8, 0x4e, 0x1c, 0xd1, 0x35, 0x2d, 0xdf, 0x89, 0x23, 0xf2,
	0x0a, 0xf6, 0x3a, 0x13, 0x6f, 0x7e, 0xc3, 0xe2, 0x74, 0x1d, 0xe9, 0xc5, 0x0d, 0xa5, 0x7e, 0x25,
	0x07, 0x2c, 0xb4, 0x59, 0x8f, 0xf9, 0x81, 0x9c, 0x76, 0xf3, 0x7f, 0xa2, 0x5e, 0xdc, 0xd1, 0xf0,
	0x55, 0x37, 0x1b, 0x5a, 0xbe, 0xea, 0xe6, 0x04, 0xa0, 0x33, 0xf1, 0x70, 0xc3, 0xe2, 0xb4, 0x8a,
	0xbc, 0x39, 0x84, 0xbc, 0x84, 0x5d, 0xcc, 0xda, 0xe2, 0x3d, 0x31, 0xf2, 0xb9, 0xa7, 0xdc, 0x01,
	0x59, 0x05, 0xbc, 0xc0, 0x55, 0xce, 0x9b, 0x1a, 0xae, 0xf2, 0x6d, 0xc0, 0x66, 0x67, 0xe2, 0xa5,
	0x08, 0xdd, 0x42, 0xda, 0x3c, 0x44, 0x9a, 0xb0, 0xe5, 0x84, 0x2e, 0x8f, 0x6e, 0x59, 0x18, 0x29,
	0xd7, 0x6d, 0xa4, 0x2c, 0x60, 0x0b, 0x1c, 0xe5, 0xb6, 0x93, 0xe3, 0xcc, 0x9c, 0x52, 0x88, 0xd6,
	0x32, 0xa7, 0x14, 0x22, 0xcf, 0x60, 0x3b, 0xab, 0xb8, 0xf4, 0x23, 0x49, 0x77, 0x1b, 0x95, 0x56,
	0xd5, 0x5e, 0x04, 0x49, 0x0b, 0x6a, 0x17, 0x71, 0xc0, 0x78, 0xdf, 0x97, 0xe3, 0x90, 0x61, 0x4b,
	0x7b, 0xa8, 0x95, 0x87, 0xf3, 0x4c, 0xd5, 0x18, 0x29, 0x32, 0x55, 0x6f, 0xcf, 0x61, 0xa7, 0x33,
	0xf1, 0xe6, 0x50, 0x5a, 0x47, 0x62, 0x0e, 0xcd, 0x92, 0xbd, 0x1a, 0x4b, 0x4f, 0x4c, 0x6f, 0x61,
	0x7f, 0x2e, 0xd9, 0x39, 0xbc, 0xc0, 0x55, 0xf6, 0x0f, 0x34, 0xdc, 0x59, 0x36, 0x29, 0x42, 0x0f,
	0xb2, 0x6c, 0x52, 0x48, 0xcd, 0xc7, 0x67, 0x26, 0xcf, 0xdc, 0xa1, 0xcb, 0x7b, 0x8c, 0x3e, 0x4c,
	0xe6, 0x63, 0x86, 0x90, 0x01, 0x1c, 0x38, 0x22, 0xb0, 0x78, 0x7f, 0x92, 0x0d, 0xae, 0x48, 0xee,
	0x8b, 0x36, 0x2a, 0xad, 0xcd, 0x77, 0x6f, 0xda, 0xe9, 0x03, 0x6f, 0xcf, 0x5e, 0x6a, 0x5b, 0x5f,
	0x82, 0x4f, 0xdf, 0x36, 0xe8, 0x19, 0x9c, 0xd4, 0xe9, 0x0e, 0x97, 0x73, 0x72, 0xe2, 0xc8, 0xec,
	0xa4, 0x52, 0xf9, 0x06, 0xc7, 0xc5, 0x1d, 0x67, 0x10, 0xb2, 0x68, 0x20, 0x86, 0x7d, 0x7a, 0x84,
	0x76, 0xf5, 0x45, 0xbb, 0x44, 0xf1, 0x4f, 0x75, 0xe4, 0x27, 0x1c, 0x3a, 0x22, 0x50, 0xe4, 0xab,
	0xd0, 0xcb, 0xa7, 0x75, 0x8c, 0xa2, 0xa7, 0xa6, 0x33, 0xe8, 0xab, 0x12, 0x53, 0xb3, 0xaa, 0xd9,
	0x52, 0xc5, 0xf6, 0x68, 0x69, 0xcb, 0x2c, 0x39, 0xb3, 0x2a, 0xf9, 0x0e, 0x27, 0xda, 0xcd, 0x59,
	0x7e, 0x8f, 0xcd, 0xf9, 0xfd, 0xa5, 0x94, 0x7c, 0x85, 0x5a, 0xfa, 0x28, 0x6d, 0xd6, 0xc3, 0xe0,
	0x4e, 0x50, 0xed, 0x85, 0xfe, 0x14, 0x8b, 0xdc, 0xc4, 0x23, 0xaf, 0x90, 0x17, 0x55, 0xd1, 0x3c,
	0xf9, 0x47, 0xd1, 0x2c, 0x90, 0xbc, 0x02, 0xb9, 0x86, 0xba, 0x23, 0x82, 0x8b, 0x38, 0xb0, 0x59,
	0xcf, 0x0f, 0x7c, 0xc6, 0x25, 0x76, 0xdb, 0x40, 0xe1, 0xd7, 0xa6, 0xcc, 0xf3, 0xfc, 0x44, 0x5c,
	0xa7, 0xa4, 0x33, 0x50, 0x9d, 0x3f, 0x5d, 0xc2, 0x20, 0xeb, 0x5e, 0xa7, 0x44, 0x3e, 0x42, 0x2d,
	0x81, 0x67, 0x37, 0xd7, 0x34, 0xdf, 0x5c, 0x9e, 0x7b, 0x64, 0xe9, 0x1e, 0x51, 0x76, 0x26, 0xb2,
	0x0b, 0x95, 0x1f, 0xec, 0x6e, 0xfa, 0xa1, 0x56, 0x7f, 0xd5, 0xd7, 0x78, 0xe2, 0x0e, 0xc7, 0x2c,
	0xfd, 0xc4, 0xe3, 0xe2, 0x43, 0xf9, 0x7d, 0xc9, 0x20, 0x95, 0x76, 0xbf, 0x94, 0xd4, 0xa5, 0x61,
	0x3a, 0x57, 0x6b, 0xcc, 0xa8, 0xb6, 0x52, 0x6f, 0x67, 0xb0, 0xaf, 0x1b, 0xd8, 0xfb, 0x68, 0xac,
	0xd4, 0xc7, 0x27, 0xa0, 0xa6, 0x51, 0xbc, 0xaf, 0xce, 0x2a, 0xfd, 0xdc, 0xac, 0xe3, 0xb8, 0x9d,
	0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x38, 0x0b, 0xa2, 0x3f, 0x0a, 0x00, 0x00,
}
