// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cand.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CandEntry struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Total                float32  `protobuf:"fixed32,2,opt,name=Total,proto3" json:"Total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CandEntry) Reset()         { *m = CandEntry{} }
func (m *CandEntry) String() string { return proto.CompactTextString(m) }
func (*CandEntry) ProtoMessage()    {}
func (*CandEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_53ffa1b34967639c, []int{0}
}

func (m *CandEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandEntry.Unmarshal(m, b)
}
func (m *CandEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandEntry.Marshal(b, m, deterministic)
}
func (m *CandEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandEntry.Merge(m, src)
}
func (m *CandEntry) XXX_Size() int {
	return xxx_messageInfo_CandEntry.Size(m)
}
func (m *CandEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_CandEntry.DiscardUnknown(m)
}

var xxx_messageInfo_CandEntry proto.InternalMessageInfo

func (m *CandEntry) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CandEntry) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Candidate struct {
	ID                   string             `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string             `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Party                string             `protobuf:"bytes,3,opt,name=Party,proto3" json:"Party,omitempty"`
	ElectnYr             int32              `protobuf:"varint,4,opt,name=ElectnYr,proto3" json:"ElectnYr,omitempty"`
	OfficeState          string             `protobuf:"bytes,5,opt,name=OfficeState,proto3" json:"OfficeState,omitempty"`
	Office               string             `protobuf:"bytes,6,opt,name=Office,proto3" json:"Office,omitempty"`
	PCC                  string             `protobuf:"bytes,7,opt,name=PCC,proto3" json:"PCC,omitempty"`
	City                 string             `protobuf:"bytes,8,opt,name=City,proto3" json:"City,omitempty"`
	State                string             `protobuf:"bytes,9,opt,name=State,proto3" json:"State,omitempty"`
	Zip                  string             `protobuf:"bytes,10,opt,name=Zip,proto3" json:"Zip,omitempty"`
	OtherAffiliates      []string           `protobuf:"bytes,11,rep,name=OtherAffiliates,proto3" json:"OtherAffiliates,omitempty"`
	TotalDirectInAmt     float32            `protobuf:"fixed32,12,opt,name=TotalDirectInAmt,proto3" json:"TotalDirectInAmt,omitempty"`
	TotalDirectInTxs     float32            `protobuf:"fixed32,13,opt,name=TotalDirectInTxs,proto3" json:"TotalDirectInTxs,omitempty"`
	AvgDirectIn          float32            `protobuf:"fixed32,14,opt,name=AvgDirectIn,proto3" json:"AvgDirectIn,omitempty"`
	TotalDirectOutAmt    float32            `protobuf:"fixed32,15,opt,name=TotalDirectOutAmt,proto3" json:"TotalDirectOutAmt,omitempty"`
	TotalDirectOutTxs    float32            `protobuf:"fixed32,16,opt,name=TotalDirectOutTxs,proto3" json:"TotalDirectOutTxs,omitempty"`
	AvgDirectOut         float32            `protobuf:"fixed32,17,opt,name=AvgDirectOut,proto3" json:"AvgDirectOut,omitempty"`
	NetBalanceDirectTx   float32            `protobuf:"fixed32,18,opt,name=NetBalanceDirectTx,proto3" json:"NetBalanceDirectTx,omitempty"`
	DirectRecipientsAmts map[string]float32 `protobuf:"bytes,19,rep,name=DirectRecipientsAmts,proto3" json:"DirectRecipientsAmts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	DirectRecipientsTxs  map[string]float32 `protobuf:"bytes,20,rep,name=DirectRecipientsTxs,proto3" json:"DirectRecipientsTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	DirectSendersAmts    map[string]float32 `protobuf:"bytes,21,rep,name=DirectSendersAmts,proto3" json:"DirectSendersAmts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	DirectSendersTxs     map[string]float32 `protobuf:"bytes,22,rep,name=DirectSendersTxs,proto3" json:"DirectSendersTxs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Candidate) Reset()         { *m = Candidate{} }
func (m *Candidate) String() string { return proto.CompactTextString(m) }
func (*Candidate) ProtoMessage()    {}
func (*Candidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_53ffa1b34967639c, []int{1}
}

func (m *Candidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candidate.Unmarshal(m, b)
}
func (m *Candidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candidate.Marshal(b, m, deterministic)
}
func (m *Candidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candidate.Merge(m, src)
}
func (m *Candidate) XXX_Size() int {
	return xxx_messageInfo_Candidate.Size(m)
}
func (m *Candidate) XXX_DiscardUnknown() {
	xxx_messageInfo_Candidate.DiscardUnknown(m)
}

var xxx_messageInfo_Candidate proto.InternalMessageInfo

func (m *Candidate) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Candidate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Candidate) GetParty() string {
	if m != nil {
		return m.Party
	}
	return ""
}

func (m *Candidate) GetElectnYr() int32 {
	if m != nil {
		return m.ElectnYr
	}
	return 0
}

func (m *Candidate) GetOfficeState() string {
	if m != nil {
		return m.OfficeState
	}
	return ""
}

func (m *Candidate) GetOffice() string {
	if m != nil {
		return m.Office
	}
	return ""
}

func (m *Candidate) GetPCC() string {
	if m != nil {
		return m.PCC
	}
	return ""
}

func (m *Candidate) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Candidate) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Candidate) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Candidate) GetOtherAffiliates() []string {
	if m != nil {
		return m.OtherAffiliates
	}
	return nil
}

func (m *Candidate) GetTotalDirectInAmt() float32 {
	if m != nil {
		return m.TotalDirectInAmt
	}
	return 0
}

func (m *Candidate) GetTotalDirectInTxs() float32 {
	if m != nil {
		return m.TotalDirectInTxs
	}
	return 0
}

func (m *Candidate) GetAvgDirectIn() float32 {
	if m != nil {
		return m.AvgDirectIn
	}
	return 0
}

func (m *Candidate) GetTotalDirectOutAmt() float32 {
	if m != nil {
		return m.TotalDirectOutAmt
	}
	return 0
}

func (m *Candidate) GetTotalDirectOutTxs() float32 {
	if m != nil {
		return m.TotalDirectOutTxs
	}
	return 0
}

func (m *Candidate) GetAvgDirectOut() float32 {
	if m != nil {
		return m.AvgDirectOut
	}
	return 0
}

func (m *Candidate) GetNetBalanceDirectTx() float32 {
	if m != nil {
		return m.NetBalanceDirectTx
	}
	return 0
}

func (m *Candidate) GetDirectRecipientsAmts() map[string]float32 {
	if m != nil {
		return m.DirectRecipientsAmts
	}
	return nil
}

func (m *Candidate) GetDirectRecipientsTxs() map[string]float32 {
	if m != nil {
		return m.DirectRecipientsTxs
	}
	return nil
}

func (m *Candidate) GetDirectSendersAmts() map[string]float32 {
	if m != nil {
		return m.DirectSendersAmts
	}
	return nil
}

func (m *Candidate) GetDirectSendersTxs() map[string]float32 {
	if m != nil {
		return m.DirectSendersTxs
	}
	return nil
}

func init() {
	proto.RegisterType((*CandEntry)(nil), "protobuf.CandEntry")
	proto.RegisterType((*Candidate)(nil), "protobuf.Candidate")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.Candidate.DirectRecipientsAmtsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.Candidate.DirectRecipientsTxsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.Candidate.DirectSendersAmtsEntry")
	proto.RegisterMapType((map[string]float32)(nil), "protobuf.Candidate.DirectSendersTxsEntry")
}

func init() { proto.RegisterFile("cand.proto", fileDescriptor_53ffa1b34967639c) }

var fileDescriptor_53ffa1b34967639c = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xc1, 0x6e, 0xda, 0x40,
	0x10, 0x86, 0x65, 0x3b, 0x50, 0x3c, 0xa4, 0x89, 0xd9, 0x10, 0xb4, 0xe5, 0x64, 0x71, 0x72, 0xa3,
	0xd4, 0x52, 0xdb, 0x4b, 0xd5, 0x1b, 0x35, 0x69, 0xc5, 0x25, 0x44, 0x8e, 0x2b, 0xb5, 0x39, 0x54,
	0xda, 0x98, 0x75, 0xbb, 0xaa, 0x31, 0xc8, 0x5e, 0x22, 0x78, 0xc8, 0xbe, 0x53, 0xb5, 0xb3, 0x80,
	0x1c, 0x6c, 0xd4, 0x72, 0xf2, 0xcc, 0xbf, 0xff, 0x7c, 0x33, 0x1e, 0xed, 0x02, 0xc4, 0x2c, 0x9b,
	0xfa, 0x8b, 0x7c, 0x2e, 0xe7, 0xa4, 0x85, 0x9f, 0xc7, 0x65, 0x32, 0x78, 0x0b, 0x76, 0xc0, 0xb2,
	0xe9, 0x4d, 0x26, 0xf3, 0x35, 0x39, 0x03, 0x73, 0x3c, 0xa2, 0x86, 0x6b, 0x78, 0x76, 0x68, 0x8e,
	0x47, 0xa4, 0x0b, 0x8d, 0x68, 0x2e, 0x59, 0x4a, 0x4d, 0xd7, 0xf0, 0xcc, 0x50, 0x27, 0x83, 0x3f,
	0xb6, 0xae, 0x11, 0x53, 0x26, 0x79, 0xa5, 0x86, 0xc0, 0xc9, 0x2d, 0x9b, 0x71, 0x2c, 0xb1, 0x43,
	0x8c, 0x15, 0xe7, 0x8e, 0xe5, 0x72, 0x4d, 0x2d, 0x14, 0x75, 0x42, 0xfa, 0xd0, 0xba, 0x49, 0x79,
	0x2c, 0xb3, 0xef, 0x39, 0x3d, 0x71, 0x0d, 0xaf, 0x11, 0xee, 0x72, 0xe2, 0x42, 0x7b, 0x92, 0x24,
	0x22, 0xe6, 0xf7, 0x92, 0x49, 0x4e, 0x1b, 0x58, 0x57, 0x96, 0x48, 0x0f, 0x9a, 0x3a, 0xa5, 0x4d,
	0x3c, 0xdc, 0x64, 0xc4, 0x01, 0xeb, 0x2e, 0x08, 0xe8, 0x0b, 0x14, 0x55, 0xa8, 0x26, 0x0a, 0x84,
	0x5c, 0xd3, 0x96, 0x9e, 0x48, 0xc5, 0x6a, 0x22, 0x4d, 0xb6, 0xf5, 0x44, 0x9a, 0xe9, 0x80, 0xf5,
	0x20, 0x16, 0x14, 0x74, 0xed, 0x83, 0x58, 0x10, 0x0f, 0xce, 0x27, 0xf2, 0x17, 0xcf, 0x87, 0x49,
	0x22, 0x52, 0xc1, 0x24, 0x2f, 0x68, 0xdb, 0xb5, 0x3c, 0x3b, 0xdc, 0x97, 0xc9, 0x15, 0x38, 0xb8,
	0x9e, 0x91, 0xc8, 0x79, 0x2c, 0xc7, 0xd9, 0x70, 0x26, 0xe9, 0x29, 0xae, 0xad, 0xa2, 0x57, 0xbc,
	0xd1, 0xaa, 0xa0, 0x2f, 0x6b, 0xbc, 0xd1, 0xaa, 0x50, 0x9b, 0x18, 0x3e, 0xfd, 0xdc, 0x2a, 0xf4,
	0x0c, 0x6d, 0x65, 0x89, 0x5c, 0x43, 0xa7, 0x54, 0x35, 0x59, 0x4a, 0xd5, 0xfa, 0x1c, 0x7d, 0xd5,
	0x83, 0xaa, 0x5b, 0x35, 0x77, 0xea, 0xdc, 0xaa, 0xfb, 0x00, 0x4e, 0x77, 0xad, 0x26, 0x4b, 0x49,
	0x3b, 0x68, 0x7c, 0xa6, 0x11, 0x1f, 0xc8, 0x2d, 0x97, 0x9f, 0x58, 0xca, 0xb2, 0x98, 0x6b, 0x39,
	0x5a, 0x51, 0x82, 0xce, 0x9a, 0x13, 0xc2, 0xa0, 0xab, 0xe3, 0x90, 0xc7, 0x62, 0x21, 0x78, 0x26,
	0x8b, 0xe1, 0x4c, 0x16, 0xf4, 0xc2, 0xb5, 0xbc, 0xf6, 0xbb, 0x37, 0xfe, 0xf6, 0x6e, 0xfa, 0xbb,
	0x4b, 0xe6, 0xd7, 0xf9, 0xf1, 0xca, 0x86, 0xb5, 0x28, 0xf2, 0x03, 0x2e, 0xf6, 0x75, 0xf5, 0x9b,
	0x5d, 0xec, 0x70, 0xfd, 0x3f, 0x1d, 0xa2, 0xd5, 0xa6, 0x41, 0x1d, 0x88, 0x7c, 0x83, 0x8e, 0x96,
	0xef, 0x79, 0x36, 0xe5, 0xb9, 0x9e, 0xff, 0x12, 0xe9, 0x57, 0x87, 0xe9, 0x25, 0xb3, 0x66, 0x57,
	0x21, 0xe4, 0x2b, 0x38, 0xcf, 0x44, 0x35, 0x76, 0x0f, 0xc1, 0xaf, 0xff, 0x09, 0xde, 0xcd, 0x5c,
	0x41, 0xf4, 0xbf, 0xc0, 0xab, 0x83, 0x3b, 0x54, 0xd7, 0xfe, 0x37, 0x5f, 0x6f, 0xde, 0xb0, 0x0a,
	0xd5, 0xf3, 0x78, 0x62, 0xe9, 0x92, 0x6f, 0x1f, 0x3e, 0x26, 0x1f, 0xcd, 0x0f, 0x46, 0xff, 0x33,
	0xd0, 0x43, 0xab, 0x3a, 0x8a, 0x33, 0x82, 0x5e, 0xfd, 0x52, 0x8e, 0xa2, 0x04, 0x70, 0x59, 0xbb,
	0x81, 0x63, 0x20, 0x8f, 0x4d, 0xdc, 0xeb, 0xfb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xa5,
	0x6a, 0x06, 0x21, 0x05, 0x00, 0x00,
}
